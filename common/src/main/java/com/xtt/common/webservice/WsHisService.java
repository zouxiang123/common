package com.xtt.common.webservice;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.6 2016-05-26T11:36:18.026+08:00 Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "wsHisService", wsdlLocation = "http://localhost:8081/hsxtws/ws/wsHisService?wsdl", targetNamespace = "http://webservice.txgl.xtt.com/")
public class WsHisService extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("http://webservice.txgl.xtt.com/", "wsHisService");
	public final static QName WsHisServicePort = new QName("http://webservice.txgl.xtt.com/", "WsHisServicePort");
	static {
		URL url = null;
		try {
			url = new URL("http://localhost:8081/hsxtws/ws/wsHisService?wsdl");
		} catch (MalformedURLException e) {
			java.util.logging.Logger.getLogger(WsHisService.class.getName()).log(java.util.logging.Level.INFO,
							"Can not initialize the default wsdl from {0}", "http://192.168.31.217:8081/hsxtws/ws/wsHisService?wsdl");
		}
		WSDL_LOCATION = url;
	}

	public WsHisService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public WsHisService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public WsHisService() {
		super(WSDL_LOCATION, SERVICE);
	}

	public WsHisService(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	public WsHisService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	public WsHisService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	@WebEndpoint(name = "WsHisServicePort")
	public IWsHisService getWsHisServicePort() {
		return super.getPort(WsHisServicePort, IWsHisService.class);
	}

	@WebEndpoint(name = "WsHisServicePort")
	public IWsHisService getWsHisServicePort(WebServiceFeature... features) {
		return super.getPort(WsHisServicePort, IWsHisService.class, features);
	}

}
