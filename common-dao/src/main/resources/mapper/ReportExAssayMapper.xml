<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.ReportExAssayMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.ReportExAssay">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fk_patient_id" jdbcType="BIGINT" property="fkPatientId" />
    <result column="fk_patient_assay_record_busi_id" jdbcType="BIGINT" property="fkPatientAssayRecordBusiId" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="req_id" jdbcType="VARCHAR" property="reqId" />
    <result column="pre_result_actual" jdbcType="DOUBLE" property="preResultActual" />
    <result column="before_result_actual" jdbcType="DOUBLE" property="beforeResultActual" />
    <result column="min_value" jdbcType="DOUBLE" property="minValue" />
    <result column="max_value" jdbcType="DOUBLE" property="maxValue" />
    <result column="difference_value" jdbcType="DOUBLE" property="differenceValue" />
    <result column="percentage_value" jdbcType="DOUBLE" property="percentageValue" />
    <result column="is_ex" jdbcType="INTEGER" property="isEx" />
    <result column="report_date" jdbcType="DATE" property="reportDate" />
    <result column="report_date_month" jdbcType="VARCHAR" property="reportDateMonth" />
    <result column="fk_tenant_id" jdbcType="INTEGER" property="fkTenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, fk_patient_id, fk_patient_assay_record_busi_id, group_id, group_name, item_code, 
    item_name, result, req_id, pre_result_actual, before_result_actual, min_value, max_value, 
    difference_value, percentage_value, is_ex, report_date, report_date_month, fk_tenant_id, 
    create_time, create_user_id, update_time, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    <include refid="Base_Column_List" />
    from report_ex_assay
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from report_ex_assay
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.ReportExAssay">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into report_ex_assay (id, fk_patient_id, fk_patient_assay_record_busi_id, 
      group_id, group_name, item_code, 
      item_name, req_id, 
      pre_result_actual, before_result_actual, min_value, 
      max_value, difference_value, percentage_value, 
      is_ex, report_date, report_date_month, 
      fk_tenant_id, create_time, create_user_id, 
      update_time, update_user_id)
    values (#{id,jdbcType=BIGINT}, #{fkPatientId,jdbcType=BIGINT}, #{fkPatientAssayRecordBusiId,jdbcType=BIGINT}, 
      #{groupId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, #{itemCode,jdbcType=VARCHAR}, 
      #{itemName,jdbcType=VARCHAR},#{reqId,jdbcType=VARCHAR}, 
      #{preResultActual,jdbcType=DOUBLE}, #{beforeResultActual,jdbcType=DOUBLE}, #{minValue,jdbcType=DOUBLE}, 
      #{maxValue,jdbcType=DOUBLE}, #{differenceValue,jdbcType=DOUBLE}, #{percentageValue,jdbcType=DOUBLE}, 
      #{isEx,jdbcType=INTEGER}, #{reportDate,jdbcType=DATE}, #{reportDateMonth,jdbcType=VARCHAR}, 
      #{fkTenantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.ReportExAssay">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into report_ex_assay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fkPatientId != null">
        fk_patient_id,
      </if>
      <if test="fkPatientAssayRecordBusiId != null">
        fk_patient_assay_record_busi_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="itemCode != null">
        item_code,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="reqId != null">
        req_id,
      </if>
      <if test="preResultActual != null">
        pre_result_actual,
      </if>
      <if test="beforeResultActual != null">
        before_result_actual,
      </if>
      <if test="minValue != null">
        min_value,
      </if>
      <if test="maxValue != null">
        max_value,
      </if>
      <if test="differenceValue != null">
        difference_value,
      </if>
      <if test="percentageValue != null">
        percentage_value,
      </if>
      <if test="isEx != null">
        is_ex,
      </if>
      <if test="reportDate != null">
        report_date,
      </if>
      <if test="reportDateMonth != null">
        report_date_month,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fkPatientId != null">
        #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="fkPatientAssayRecordBusiId != null">
        #{fkPatientAssayRecordBusiId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="itemCode != null">
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="reqId != null">
        #{reqId,jdbcType=VARCHAR},
      </if>
      <if test="preResultActual != null">
        #{preResultActual,jdbcType=DOUBLE},
      </if>
      <if test="beforeResultActual != null">
        #{beforeResultActual,jdbcType=DOUBLE},
      </if>
      <if test="minValue != null">
        #{minValue,jdbcType=DOUBLE},
      </if>
      <if test="maxValue != null">
        #{maxValue,jdbcType=DOUBLE},
      </if>
      <if test="differenceValue != null">
        #{differenceValue,jdbcType=DOUBLE},
      </if>
      <if test="percentageValue != null">
        #{percentageValue,jdbcType=DOUBLE},
      </if>
      <if test="isEx != null">
        #{isEx,jdbcType=INTEGER},
      </if>
      <if test="reportDate != null">
        #{reportDate,jdbcType=DATE},
      </if>
      <if test="reportDateMonth != null">
        #{reportDateMonth,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.ReportExAssay">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update report_ex_assay
    <set>
      <if test="fkPatientId != null">
        fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="fkPatientAssayRecordBusiId != null">
        fk_patient_assay_record_busi_id = #{fkPatientAssayRecordBusiId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="itemCode != null">
        item_code = #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="reqId != null">
        req_id = #{reqId,jdbcType=VARCHAR},
      </if>
      <if test="preResultActual != null">
        pre_result_actual = #{preResultActual,jdbcType=DOUBLE},
      </if>
      <if test="beforeResultActual != null">
        before_result_actual = #{beforeResultActual,jdbcType=DOUBLE},
      </if>
      <if test="minValue != null">
        min_value = #{minValue,jdbcType=DOUBLE},
      </if>
      <if test="maxValue != null">
        max_value = #{maxValue,jdbcType=DOUBLE},
      </if>
      <if test="differenceValue != null">
        difference_value = #{differenceValue,jdbcType=DOUBLE},
      </if>
      <if test="percentageValue != null">
        percentage_value = #{percentageValue,jdbcType=DOUBLE},
      </if>
      <if test="isEx != null">
        is_ex = #{isEx,jdbcType=INTEGER},
      </if>
      <if test="reportDate != null">
        report_date = #{reportDate,jdbcType=DATE},
      </if>
      <if test="reportDateMonth != null">
        report_date_month = #{reportDateMonth,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.ReportExAssay">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update report_ex_assay
    set fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      fk_patient_assay_record_busi_id = #{fkPatientAssayRecordBusiId,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      item_code = #{itemCode,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      req_id = #{reqId,jdbcType=VARCHAR},
      pre_result_actual = #{preResultActual,jdbcType=DOUBLE},
      before_result_actual = #{beforeResultActual,jdbcType=DOUBLE},
      min_value = #{minValue,jdbcType=DOUBLE},
      max_value = #{maxValue,jdbcType=DOUBLE},
      difference_value = #{differenceValue,jdbcType=DOUBLE},
      percentage_value = #{percentageValue,jdbcType=DOUBLE},
      is_ex = #{isEx,jdbcType=INTEGER},
      report_date = #{reportDate,jdbcType=DATE},
      report_date_month = #{reportDateMonth,jdbcType=VARCHAR},
      fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <!-- 自定义 -->
  <resultMap type="com.xtt.common.dao.po.ReportExAssayPo" id="POResultMap" extends="BaseResultMap">
      <result column="name" jdbcType="VARCHAR" property="patientName" />
  </resultMap>
  
   <!-- 获取化验结果的最大日期和最小日期 -->
  <select id="getByAssayStartTime"  parameterType="int" resultType="map">
    SELECT
        min(assay_date) AS startDate,
        max(assay_date) AS endDate
    FROM
        patient_assay_record_busi
    WHERE
        assay_date IS NOT NULL
    AND fk_tenant_id = #{fkTenantId}
  </select>
  <!-- 查询化验结果异常数据 -->
  <select id="listExAssayByPatient"  parameterType="com.xtt.common.dao.po.ReportExAssayPo" resultType="map">
        SELECT
            p.`name` patientName,
            ass.fk_Patient_Id fkPatientId
        FROM
            report_ex_assay ass
        left join patient p on p.id=ass.fk_patient_id
        <if test="isTemp != null and isTemp != ''">
            JOIN patient hd_p ON hd_p.id = p.id AND hd_p.fk_tenant_id = #{fkTenantId} and hd_p.is_temp in(#{isTemp})
        </if>
        WHERE
            ass.fk_tenant_id = #{fkTenantId}
            <if test="reportDateStart!=null and reportDateStart!=''">
                AND report_date &gt;=#{reportDateStart}
            </if>
            <if test="reportDateEnd!=null  and reportDateEnd!=''">
                AND report_date &lt;=#{reportDateEnd}
            </if>
        GROUP BY
            ass.fk_patient_id
  </select>
  
   <!--查询患者化验结果数据详细 -->
  <select id="listExAssayByPatientDeital"  parameterType="com.xtt.common.dao.po.ReportExAssayPo" resultMap="POResultMap">
        SELECT
            p.`name`,
            ass.*
        FROM
            report_ex_assay ass
        left join patient p on p.id=ass.fk_patient_id
        <if test="isTemp != null and isTemp != ''">
            JOIN patient hd_p ON hd_p.id = p.id AND hd_p.fk_tenant_id = #{fkTenantId} and hd_p.is_temp in(#{isTemp})
        </if>
        WHERE
            ass.fk_tenant_id = #{fkTenantId}
            <if test="reportDateStart!=null and reportDateStart!=''">
                AND report_date &gt;=#{reportDateStart}
            </if>
            <if test="reportDateEnd!=null  and reportDateEnd!=''">
                AND report_date &lt;=#{reportDateEnd}
            </if>
             <if test="fkPatientId!=null  and fkPatientId!=''">
                AND fk_patient_id=#{fkPatientId}
            </if>
        GROUP BY
            ass.report_date
  </select>
  <!--  删除指定日期数据 -->
  <delete id="deleteByCondition"  >
    delete from report_ex_assay where date(report_date) = #{startTime} and fk_tenant_id = #{fkTenantId}
  </delete>
</mapper>