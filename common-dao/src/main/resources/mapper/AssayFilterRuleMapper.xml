<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.AssayFilterRuleMapper">
<resultMap id="BaseResultMap" type="com.xtt.common.dao.model.AssayFilterRule">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
    <result column="keyword_before" jdbcType="VARCHAR" property="keywordBefore" />
    <result column="keyword_after" jdbcType="VARCHAR" property="keywordAfter" />
    <result column="item_count_before" jdbcType="INTEGER" property="itemCountBefore" />
    <result column="item_count_after" jdbcType="INTEGER" property="itemCountAfter" />
    <result column="interval_day" jdbcType="INTEGER" property="intervalDay" />
    <result column="fk_tenant_id" jdbcType="INTEGER" property="fkTenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, category, group_name, item_code, keyword_before, keyword_after, item_count_before, 
    item_count_after, interval_day, fk_tenant_id, create_time, create_user_id, update_time, 
    update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    <include refid="Base_Column_List" />
    from assay_filter_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from assay_filter_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.AssayFilterRule">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into assay_filter_rule (id, category, group_name, 
      item_code, keyword_before, keyword_after, 
      item_count_before, item_count_after, interval_day, 
      fk_tenant_id, create_time, create_user_id, 
      update_time, update_user_id)
    values (#{id,jdbcType=BIGINT}, #{category,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, 
      #{itemCode,jdbcType=VARCHAR}, #{keywordBefore,jdbcType=VARCHAR}, #{keywordAfter,jdbcType=VARCHAR}, 
      #{itemCountBefore,jdbcType=INTEGER}, #{itemCountAfter,jdbcType=INTEGER}, #{intervalDay,jdbcType=INTEGER}, 
      #{fkTenantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.AssayFilterRule">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into assay_filter_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="itemCode != null">
        item_code,
      </if>
      <if test="keywordBefore != null">
        keyword_before,
      </if>
      <if test="keywordAfter != null">
        keyword_after,
      </if>
      <if test="itemCountBefore != null">
        item_count_before,
      </if>
      <if test="itemCountAfter != null">
        item_count_after,
      </if>
      <if test="intervalDay != null">
        interval_day,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="itemCode != null">
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="keywordBefore != null">
        #{keywordBefore,jdbcType=VARCHAR},
      </if>
      <if test="keywordAfter != null">
        #{keywordAfter,jdbcType=VARCHAR},
      </if>
      <if test="itemCountBefore != null">
        #{itemCountBefore,jdbcType=INTEGER},
      </if>
      <if test="itemCountAfter != null">
        #{itemCountAfter,jdbcType=INTEGER},
      </if>
      <if test="intervalDay != null">
        #{intervalDay,jdbcType=INTEGER},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.AssayFilterRule">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update assay_filter_rule
    <set>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="itemCode != null">
        item_code = #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="keywordBefore != null">
        keyword_before = #{keywordBefore,jdbcType=VARCHAR},
      </if>
      <if test="keywordAfter != null">
        keyword_after = #{keywordAfter,jdbcType=VARCHAR},
      </if>
      <if test="itemCountBefore != null">
        item_count_before = #{itemCountBefore,jdbcType=INTEGER},
      </if>
      <if test="itemCountAfter != null">
        item_count_after = #{itemCountAfter,jdbcType=INTEGER},
      </if>
      <if test="intervalDay != null">
        interval_day = #{intervalDay,jdbcType=INTEGER},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.AssayFilterRule">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update assay_filter_rule
    set category = #{category,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      item_code = #{itemCode,jdbcType=VARCHAR},
      keyword_before = #{keywordBefore,jdbcType=VARCHAR},
      keyword_after = #{keywordAfter,jdbcType=VARCHAR},
      item_count_before = #{itemCountBefore,jdbcType=INTEGER},
      item_count_after = #{itemCountAfter,jdbcType=INTEGER},
      interval_day = #{intervalDay,jdbcType=INTEGER},
      fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
     <!-- user define -->
  <select id="getAssayFilterRuleByTenantId" resultMap="BaseResultMap">
    SELECT 
        category
        ,item_code
        ,group_name
        ,keyword_before
        ,keyword_after
        ,item_count_before,
        item_count_after,
        interval_day 
    from assay_filter_rule
    <where>
        fk_tenant_id  = #{fkTenantId,jdbcType=INTEGER}
    </where>
  </select>
</mapper>