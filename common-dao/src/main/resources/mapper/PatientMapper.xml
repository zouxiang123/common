<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.PatientMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="initial" jdbcType="VARCHAR" property="initial" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="image_path" jdbcType="VARCHAR" property="imagePath" />
    <result column="work_unit" jdbcType="VARCHAR" property="workUnit" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="emergency_mobile" jdbcType="VARCHAR" property="emergencyMobile" />
    <result column="province" jdbcType="INTEGER" property="province" />
    <result column="county" jdbcType="INTEGER" property="county" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="dry_weight" jdbcType="DECIMAL" property="dryWeight" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="fk_tenant_id" jdbcType="INTEGER" property="fkTenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="medicare_card" jdbcType="VARCHAR" property="medicareCard" />
    <result column="medicare_card_type" jdbcType="VARCHAR" property="medicareCardType" />
    <result column="admission_number" jdbcType="VARCHAR" property="admissionNumber" />
    <result column="spell_initials" jdbcType="VARCHAR" property="spellInitials" />
    <result column="outpatient_number" jdbcType="VARCHAR" property="outpatientNumber" />
    <result column="id_type" jdbcType="VARCHAR" property="idType" />
    <result column="emergency_contacts" jdbcType="VARCHAR" property="emergencyContacts" />
    <result column="emergency_mobile2" jdbcType="VARCHAR" property="emergencyMobile2" />
    <result column="emergency_mobile3" jdbcType="VARCHAR" property="emergencyMobile3" />
    <result column="offset" jdbcType="DECIMAL" property="offset" />
    <result column="is_temp" jdbcType="BIT" property="isTemp" />
    <result column="dialysis_times" jdbcType="INTEGER" property="dialysisTimes" />
    <result column="patient_type" jdbcType="VARCHAR" property="patientType" />
    <result column="blood_abo" jdbcType="VARCHAR" property="bloodAbo" />
    <result column="blood_rh" jdbcType="VARCHAR" property="bloodRh" />
    <result column="barcode_path" jdbcType="VARCHAR" property="barcodePath" />
    <result column="height" jdbcType="DECIMAL" property="height" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, account, name, initial, password, id_number, sex, birthday, image_path, work_unit, 
    profession, mobile, emergency_mobile, province, county, address, dry_weight, balance, 
    del_flag, fk_tenant_id, create_time, create_user_id, update_time, update_user_id, 
    medicare_card, medicare_card_type, admission_number, spell_initials, outpatient_number, 
    id_type, emergency_contacts, emergency_mobile2, emergency_mobile3, offset, is_temp, 
    dialysis_times, patient_type, blood_abo, blood_rh, barcode_path, height, weight
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    <include refid="Base_Column_List" />
    from patient
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from patient
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into patient (id, account, name, 
      initial, password, id_number, 
      sex, birthday, image_path, 
      work_unit, profession, mobile, 
      emergency_mobile, province, county, 
      address, dry_weight, balance, 
      del_flag, fk_tenant_id, create_time, 
      create_user_id, update_time, update_user_id, 
      medicare_card, medicare_card_type, admission_number, 
      spell_initials, outpatient_number, id_type, 
      emergency_contacts, emergency_mobile2, emergency_mobile3, 
      offset, is_temp, dialysis_times, 
      patient_type, blood_abo, blood_rh, 
      barcode_path, height, weight
      )
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{initial,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{imagePath,jdbcType=VARCHAR}, 
      #{workUnit,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{emergencyMobile,jdbcType=VARCHAR}, #{province,jdbcType=INTEGER}, #{county,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{dryWeight,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, 
      #{delFlag,jdbcType=BIT}, #{fkTenantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, 
      #{medicareCard,jdbcType=VARCHAR}, #{medicareCardType,jdbcType=VARCHAR}, #{admissionNumber,jdbcType=VARCHAR}, 
      #{spellInitials,jdbcType=VARCHAR}, #{outpatientNumber,jdbcType=VARCHAR}, #{idType,jdbcType=VARCHAR}, 
      #{emergencyContacts,jdbcType=VARCHAR}, #{emergencyMobile2,jdbcType=VARCHAR}, #{emergencyMobile3,jdbcType=VARCHAR}, 
      #{offset,jdbcType=DECIMAL}, #{isTemp,jdbcType=BIT}, #{dialysisTimes,jdbcType=INTEGER}, 
      #{patientType,jdbcType=VARCHAR}, #{bloodAbo,jdbcType=VARCHAR}, #{bloodRh,jdbcType=VARCHAR}, 
      #{barcodePath,jdbcType=VARCHAR}, #{height,jdbcType=DECIMAL}, #{weight,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="initial != null">
        initial,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="imagePath != null">
        image_path,
      </if>
      <if test="workUnit != null">
        work_unit,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="emergencyMobile != null">
        emergency_mobile,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="dryWeight != null">
        dry_weight,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="medicareCard != null">
        medicare_card,
      </if>
      <if test="medicareCardType != null">
        medicare_card_type,
      </if>
      <if test="admissionNumber != null">
        admission_number,
      </if>
      <if test="spellInitials != null">
        spell_initials,
      </if>
      <if test="outpatientNumber != null">
        outpatient_number,
      </if>
      <if test="idType != null">
        id_type,
      </if>
      <if test="emergencyContacts != null">
        emergency_contacts,
      </if>
      <if test="emergencyMobile2 != null">
        emergency_mobile2,
      </if>
      <if test="emergencyMobile3 != null">
        emergency_mobile3,
      </if>
      <if test="offset != null">
        offset,
      </if>
      <if test="isTemp != null">
        is_temp,
      </if>
      <if test="dialysisTimes != null">
        dialysis_times,
      </if>
      <if test="patientType != null">
        patient_type,
      </if>
      <if test="bloodAbo != null">
        blood_abo,
      </if>
      <if test="bloodRh != null">
        blood_rh,
      </if>
      <if test="barcodePath != null">
        barcode_path,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="initial != null">
        #{initial,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="imagePath != null">
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile != null">
        #{emergencyMobile,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=INTEGER},
      </if>
      <if test="county != null">
        #{county,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="dryWeight != null">
        #{dryWeight,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="medicareCard != null">
        #{medicareCard,jdbcType=VARCHAR},
      </if>
      <if test="medicareCardType != null">
        #{medicareCardType,jdbcType=VARCHAR},
      </if>
      <if test="admissionNumber != null">
        #{admissionNumber,jdbcType=VARCHAR},
      </if>
      <if test="spellInitials != null">
        #{spellInitials,jdbcType=VARCHAR},
      </if>
      <if test="outpatientNumber != null">
        #{outpatientNumber,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        #{idType,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContacts != null">
        #{emergencyContacts,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile2 != null">
        #{emergencyMobile2,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile3 != null">
        #{emergencyMobile3,jdbcType=VARCHAR},
      </if>
      <if test="offset != null">
        #{offset,jdbcType=DECIMAL},
      </if>
      <if test="isTemp != null">
        #{isTemp,jdbcType=BIT},
      </if>
      <if test="dialysisTimes != null">
        #{dialysisTimes,jdbcType=INTEGER},
      </if>
      <if test="patientType != null">
        #{patientType,jdbcType=VARCHAR},
      </if>
      <if test="bloodAbo != null">
        #{bloodAbo,jdbcType=VARCHAR},
      </if>
      <if test="bloodRh != null">
        #{bloodRh,jdbcType=VARCHAR},
      </if>
      <if test="barcodePath != null">
        #{barcodePath,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update patient
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="initial != null">
        initial = #{initial,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="imagePath != null">
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        work_unit = #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile != null">
        emergency_mobile = #{emergencyMobile,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="dryWeight != null">
        dry_weight = #{dryWeight,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="medicareCard != null">
        medicare_card = #{medicareCard,jdbcType=VARCHAR},
      </if>
      <if test="medicareCardType != null">
        medicare_card_type = #{medicareCardType,jdbcType=VARCHAR},
      </if>
      <if test="admissionNumber != null">
        admission_number = #{admissionNumber,jdbcType=VARCHAR},
      </if>
      <if test="spellInitials != null">
        spell_initials = #{spellInitials,jdbcType=VARCHAR},
      </if>
      <if test="outpatientNumber != null">
        outpatient_number = #{outpatientNumber,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        id_type = #{idType,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContacts != null">
        emergency_contacts = #{emergencyContacts,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile2 != null">
        emergency_mobile2 = #{emergencyMobile2,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile3 != null">
        emergency_mobile3 = #{emergencyMobile3,jdbcType=VARCHAR},
      </if>
      <if test="offset != null">
        offset = #{offset,jdbcType=DECIMAL},
      </if>
      <if test="isTemp != null">
        is_temp = #{isTemp,jdbcType=BIT},
      </if>
      <if test="dialysisTimes != null">
        dialysis_times = #{dialysisTimes,jdbcType=INTEGER},
      </if>
      <if test="patientType != null">
        patient_type = #{patientType,jdbcType=VARCHAR},
      </if>
      <if test="bloodAbo != null">
        blood_abo = #{bloodAbo,jdbcType=VARCHAR},
      </if>
      <if test="bloodRh != null">
        blood_rh = #{bloodRh,jdbcType=VARCHAR},
      </if>
      <if test="barcodePath != null">
        barcode_path = #{barcodePath,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update patient
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      initial = #{initial,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      image_path = #{imagePath,jdbcType=VARCHAR},
      work_unit = #{workUnit,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      emergency_mobile = #{emergencyMobile,jdbcType=VARCHAR},
      province = #{province,jdbcType=INTEGER},
      county = #{county,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      dry_weight = #{dryWeight,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      del_flag = #{delFlag,jdbcType=BIT},
      fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      medicare_card = #{medicareCard,jdbcType=VARCHAR},
      medicare_card_type = #{medicareCardType,jdbcType=VARCHAR},
      admission_number = #{admissionNumber,jdbcType=VARCHAR},
      spell_initials = #{spellInitials,jdbcType=VARCHAR},
      outpatient_number = #{outpatientNumber,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=VARCHAR},
      emergency_contacts = #{emergencyContacts,jdbcType=VARCHAR},
      emergency_mobile2 = #{emergencyMobile2,jdbcType=VARCHAR},
      emergency_mobile3 = #{emergencyMobile3,jdbcType=VARCHAR},
      offset = #{offset,jdbcType=DECIMAL},
      is_temp = #{isTemp,jdbcType=BIT},
      dialysis_times = #{dialysisTimes,jdbcType=INTEGER},
      patient_type = #{patientType,jdbcType=VARCHAR},
      blood_abo = #{bloodAbo,jdbcType=VARCHAR},
      blood_rh = #{bloodRh,jdbcType=VARCHAR},
      barcode_path = #{barcodePath,jdbcType=VARCHAR},
      height = #{height,jdbcType=DECIMAL},
      weight = #{weight,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>


	<!-- 自定义 -->
	<resultMap extends="BaseResultMap" id="ExtendResultMap" type="com.xtt.common.dao.po.PatientPO">
	  <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
	  <result column="county_name" jdbcType="VARCHAR" property="countyName" />
	  <result column="age" jdbcType="VARCHAR" property="age" />
	  
	  <result column="fk_dialysis_campaign_id" jdbcType="BIGINT" property="fkDialysisCampaignId" />
	  <result column="last_step" jdbcType="INTEGER" property="lastStep" />
	  <result column="is_emergency" jdbcType="BIT" property="isEmergency" />
	  
	  <result column="bedCode" property="bedCode" />
	  <result column="areaCode" property="areaCode" />
	</resultMap>
	<!-- 根据流程ID查询对应的患者 -->
	<select id="selectByPDId" parameterType="Long" resultMap="ExtendResultMap">
		select
			pv.`name` province_name,
			county.`name` county_name,
			DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) AS age,
			p.*
		from
			patient_diagnosis pd
		inner join patient p on pd.fk_patient_id = p.id
		left join province pv on p.province = pv.id
		left join county on p.county = county.id
		where
			pd.id=#{pdId}
	</select>
	
	<select id="selectForSickbed" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select pa.* from patient pa
		WHERE pa.del_flag = 0
		AND pa.fk_tenant_id = #{fkTenantId}
		AND NOT EXISTS(
			SELECT * FROM sickbed_record sr
			WHERE sr.fk_patient_id = pa.id
			AND dialysis_date = #{dialysisDateStr}
		)
	    ORDER BY pa.initial
	</select>
	
	<select id="selectBySrId" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select pa.* 
		, sr.dialysis_model as dialysisModel
		from patient pa
		JOIN sickbed_record sr ON sr.fk_patient_id = pa.id
		WHERE sr.id = #{sickbedRecordId}
	</select>
	
	<select id="selectForSickbedTemplate" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select pa.* from patient pa
		WHERE pa.del_flag = 0
		AND pa.fk_tenant_id = #{fkTenantId}
		AND NOT EXISTS(
			SELECT * FROM sickbed_record_template srt
			WHERE srt.fk_patient_id = pa.id
			AND srt.day_of_week = #{dayOfWeek}
			AND srt.week_number = #{weekNumber}
		)
	    ORDER BY pa.initial
	</select>
	
	<select id="selectBySrtId" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select pa.* 
		, srt.dialysis_model as dialysisModel
		from patient pa
		JOIN sickbed_record_template srt ON srt.fk_patient_id = pa.id
		WHERE srt.id = #{sickbedRecordId}
	</select>
	
	<select id="selectForDrugStock" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		SELECT pa.id, pa.account, pa.`name`, pa.sex, pa.image_path
  			-- , dc.id as fk_dialysis_campaign_id, si.code AS bedCode, sa.`code` as areaCode
   			, IF(st_pa.fk_patient_id is NULL, 0, 1) as stockWarnFlag
		FROM patient pa
		-- LEFT JOIN dialysis_campaign dc on dc.fk_patient_id = pa.id AND dc.end_flag = 0
		-- LEFT JOIN sickbed_record sr on sr.fk_dialysis_campaign_id = dc.id
		-- LEFT JOIN sickbed si on si.id = sr.fk_sickbed_id
		-- LEFT JOIN sickbed_area sa ON sa.id = si.fk_sickbed_area_id
		LEFT JOIN (
			SELECT DISTINCT pds.fk_patient_id
			FROM patient_drug_stock pds
			INNER JOIN drug dr ON dr.id = pds.fk_drug_id AND dr.is_enable = 0 AND dr.pid &gt; 0
			WHERE dr.fk_tenant_id = #{fkTenantId}
			AND dr.stock_flag = 1
			GROUP BY pds.fk_patient_id, dr.pid HAVING SUM(stock) &lt; (SELECT param_value from sys_param where param_name='drugWarning')
	
		) st_pa ON st_pa.fk_patient_id = pa.id
		WHERE pa.fk_tenant_id = #{fkTenantId}
		AND pa.del_flag = 0
		<if test="id != null">
			AND pa.id = #{id}
		</if>
		ORDER BY pa.initial
	</select>
	
	<select id="selectPatientByTenantId" parameterType="java.lang.Integer" resultMap="ExtendResultMap">
		select *
			,DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) AS age
		from patient where fk_tenant_id = #{tenantId,jdbcType=INTEGER} and del_flag = 0 order by initial asc
	</select>
	
	<select id="selectByCondition" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select * from patient 
		where fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
		<if test="id != null">
			and id like concat(#{id} ,'%')
		</if>
		<if test="name != null and name != ''">
			and name like concat('%', #{name} ,'%')
		</if>
		<if test="delFlag != null">
			and del_flag = #{delFlag}
		</if>
		order by initial asc
	</select>
	
	<select id="selectTodayUserDCOperatedPatients" resultMap="ExtendResultMap">
		SELECT p.id,p.`name`,p.image_path,p.account,p.sex,p.mobile,dc.id as fk_dialysis_campaign_id,max(dc.last_step) AS last_step,dc.is_emergency
		FROM
			process_history ph
		JOIN dialysis_campaign dc ON dc.id = ph.fk_dialysis_campaign_id
		JOIN patient p ON p.id = dc.fk_patient_id
		WHERE ph.operator_id=#{userId}
		AND DATE_FORMAT(dc.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
		GROUP BY p.id
	</select>
	
	<select id="selectTodayUserDiagnosePatients" resultMap="ExtendResultMap">
		SELECT p.id,p.`name`,p.image_path,p.account,p.sex,p.mobile,pd.id as fk_dialysis_campaign_id,IF(dc.id IS NULL,max(pd.last_step),dc.last_step) AS last_step, 0 as is_emergency
		FROM (
			SELECT t.fk_patient_diagnosis_id FROM medical_history t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION 
			SELECT t.fk_patient_diagnosis_id FROM clinical_diagnosis_result t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION 
			SELECT t.fk_patient_diagnosis_id FROM pathologic_diagnosis_result t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION 
			SELECT t.fk_patient_diagnosis_id FROM ckd_stage t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION 
			SELECT t.fk_patient_diagnosis_id FROM cure_symptom_and_condition t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION 
			SELECT t.fk_patient_diagnosis_id FROM other_diagnosis_result t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION 
			SELECT t.id FROM patient_diagnosis t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d') AND t.last_step=80
		) AS temp
		JOIN patient_diagnosis pd ON pd.id=temp.fk_patient_diagnosis_id
		JOIN patient p ON pd.fk_patient_id=p.id
		LEFT JOIN dialysis_campaign dc ON dc.fk_patient_id = p.id AND DATE_FORMAT(dc.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
		<if test="ids != null and ids.size() != 0">
		WHERE p.id NOT IN 
			<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">#{item}</foreach>
		</if>
		GROUP BY p.id
	</select>
	
	<select id="selectTodayUserBuildPathwayPatients" resultMap="ExtendResultMap">
		SELECT p.id,p.`name`,p.image_path,p.account,p.sex,p.mobile,pa.id as fk_dialysis_campaign_id,IF(dc.id IS NULL,max(pa.step),dc.last_step) as last_step, 0 as is_emergency
		FROM (
			SELECT t.fk_pathway_activity_id FROM pathway_establish_evaluation_result t WHERE t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
			UNION
			SELECT t.fk_pathway_activity_id FROM pathway t WHERE  t.operator_id = #{userId} AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
		) AS temp
		JOIN pathway_activity pa ON temp.fk_pathway_activity_id = pa.id
		JOIN patient p ON p.id=pa.fk_patient_id
		LEFT JOIN dialysis_campaign dc ON dc.fk_patient_id = p.id AND DATE_FORMAT(dc.update_time,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
		<if test="ids != null and ids.size() != 0">
		WHERE p.id NOT IN 
			<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">#{item}</foreach>
		</if>
		GROUP BY p.id
	</select>
	
	<select id="selectPatientCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select count(*) from patient where fk_tenant_id = #{tenantId,jdbcType=INTEGER} and del_flag = 0
	</select>
	
	<select id="selectById" parameterType="java.lang.Long" resultMap="ExtendResultMap">
		select 
		    p.*,
			pv.`name` province_name,
			county.`name` county_name,
			DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) AS age
	    from patient p
			left join province pv on p.province = pv.id
			left join county on p.county = county.id
	    where p.id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="selectMakePrescriptionReport" resultType="java.util.Map">
		SELECT
			count(t.fk_patient_id) as value,t.create_time as time
		FROM
			(
				SELECT
					dc.fk_patient_id,
					temp.create_time
				FROM
					dialysis_campaign dc
				JOIN (
					SELECT
						p.fk_dialysis_campaign_id,
						p.create_time
					FROM
						dialysis_prescription p
					JOIN sys_user u ON u.id = p.operator_id
					WHERE
						u.id = #{userId}
					GROUP BY
						p.fk_dialysis_campaign_id
				) AS temp ON temp.fk_dialysis_campaign_id = dc.id
				GROUP BY
					dc.fk_patient_id
			) AS t
			where t.create_time &gt;= #{startDate}
		<choose>
			<when test="dateType == 3">
				GROUP BY DATE_FORMAT(t.create_time, '%Y-%m')
			</when>
			<when test="dateType == 2">
				GROUP BY DATE_FORMAT(t.create_time, '%d')
			</when>
			<when test="dateType == 1">
				GROUP BY DATE_FORMAT(t.create_time, '%w')
			</when>
		</choose>
		ORDER BY t.create_time ASC
	</select>
	
	<select id="selectPatientByCDRType" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		SELECT pa.*
		FROM patient pa
		INNER JOIN clinical_diagnosis_result cdr ON cdr.fk_patient_id = pa.id AND cdr.is_enable = 1 AND cdr.is_draft = 0
		WHERE pa.fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
		AND cdr.type = #{CDRType}
		AND cdr.id = (select MAX(cdre.id) from clinical_diagnosis_result cdre WHERE cdre.fk_patient_id = cdr.fk_patient_id)
	</select>
	
	<select id="selectPatientByStartCampaign" resultMap="ExtendResultMap">
		SELECT pa.*, si.`code` as bedCode, sa.`code` as areaCode
		,sr.shift_number AS shiftNumber
		FROM patient pa
		INNER JOIN sickbed_record sr ON sr.fk_patient_id = pa.id
		INNER JOIN sickbed si ON si.id = sr.fk_sickbed_id
		INNER JOIN sickbed_area sa ON sa.id = si.fk_sickbed_area_id
		WHERE pa.fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
		AND pa.del_flag = 0
		AND DATE_FORMAT(sr.dialysis_date,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
		AND sr.fk_dialysis_campaign_id is NULL
		AND NOT EXISTS (SELECT 1 FROM dialysis_campaign dc where dc.end_flag = 0 and dc.fk_patient_id = pa.id)
		AND sr.shift_number = #{shiftNumber}
		ORDER BY sr.shift_number, pa.initial
	</select>
	
	<select id="selectPatientByStartCampaignCount" resultType="map">
		SELECT count(pa.id) as count,GROUP_CONCAT(distinct pa.image_path) AS image_path
		FROM patient pa
		INNER JOIN sickbed_record sr ON sr.fk_patient_id = pa.id
		WHERE pa.fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
		AND pa.del_flag = 0
		AND DATE_FORMAT(sr.dialysis_date,'%Y-%m-%d') = DATE_FORMAT(#{currentDate},'%Y-%m-%d')
		AND sr.fk_dialysis_campaign_id is NULL
		AND NOT EXISTS (SELECT 1 FROM dialysis_campaign dc where dc.end_flag = 0 and dc.fk_patient_id = pa.id)
		AND sr.shift_number = #{shiftNumber}
	</select>
	
	<update id="updateDelFlag" parameterType="java.lang.Long">
		update patient set del_flag = 1 where id = #{id}
	</update>
	
	<select id="checkPatientExistByIdNumber" resultType="int">
		SELECT count(*)
		FROM patient
		WHERE 
			fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
			AND id_number = #{idNumber,jdbcType=VARCHAR}
			<if test="id != null">
				AND id != #{id}
			</if>
	</select>
	
	<select id="selectByDCId" resultMap="ExtendResultMap">
		select p.* from patient p join dialysis_campaign dc on dc.fk_patient_id = p.id 
		where dc.id=#{dcId} and p.fk_tenant_id = #{tenantId,jdbcType=INTEGER} and p.del_flag = 0
	</select>
	
	<resultMap extends="BaseResultMap" id="manageResultMap" type="com.xtt.common.dao.po.PatientManagePO" />
	
	<select id="selectListForPatientManage" parameterType="com.xtt.common.dao.model.Patient" resultMap="manageResultMap">
		select pa.* 
		from patient pa
		<where>
			pa.fk_tenant_id = #{fkTenantId}
			<if test="name != null and name != ''">
				 and name like concat('%', #{name,jdbcType=VARCHAR},'%')
			</if>
			<if test="mobile != null and mobile != ''">
				 and mobile like concat('%', #{mobile,jdbcType=VARCHAR},'%')
			</if>
			<if test="sex != null and sex != ''">
				 and sex = #{sex,jdbcType=VARCHAR}
			</if>
			<if test="delFlag != null">
				 and del_flag = #{delFlag,jdbcType=BIT}
			</if>
		</where>
		order by pa.initial
	</select>
	
	<select id="selectPathwayPatientList" parameterType="java.util.Map" resultMap="manageResultMap">
		select distinct p.* 
		from patient p
		left join pathway_activity pa on p.id = pa.fk_patient_id and pa.end_flag = 0
		left join pathway pw on pw.fk_pathway_activity_id=pa.id and pw.is_enable = 1
		<where>
	      <if test="name != null and name != ''">
	        and name like concat('%', #{name,jdbcType=VARCHAR},'%')
	      </if>
	      <if test="mobile != null and mobile != ''">
			 and mobile like concat('%', #{mobile,jdbcType=VARCHAR},'%')
	      </if>
	      <if test="sex != null and sex != ''">
	        and sex = #{sex,jdbcType=VARCHAR}
	      </if>
	      <if test="delFlag != null">
	        and del_flag = #{delFlag,jdbcType=BIT}
	      </if>
	      <if test="T != null and T != '' or AVF != null and AVF != '' or CVC != null and CVC != '' or AVG != null and AVG != ''">
	      	and (1=0
	      </if>
	      <if test="T != null and T != ''">
	        or pw.type = #{T,jdbcType=VARCHAR}
	      </if>
	      <if test="AVF != null and AVF != ''">
	        or pw.sub_type = #{AVF,jdbcType=VARCHAR}
	      </if>
	      <if test="CVC != null and CVC != ''">
	        or pw.sub_type = #{CVC,jdbcType=VARCHAR}
	      </if>
	      <if test="AVG != null and AVG != ''">
	        or pw.sub_type = #{AVG,jdbcType=VARCHAR}
	      </if>
	      <if test="T != null and T != '' or AVF != null and AVF != '' or CVC != null and CVC != '' or AVG != null and AVG != ''">
	      	)
	      </if>
	      <if test="ageFrom != null and ageFrom != ''">
	        and DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) &gt;= #{ageFrom}
	      </if>
	      <if test="ageTo != null and ageTo != ''">
	        and DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) &lt;= #{ageTo}
	      </if>
		</where>
		order by p.initial
	</select>
	
	<select id="findById" parameterType="java.lang.Long" resultType="com.xtt.common.dao.model.Patient">
		select * from patient
		where id= #{id}
	</select>
	
	<select id="selectPatientByIdNumber" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select pa.*,
			DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) AS age
		from patient pa
		where
			pa.id_number = #{idNumber}
			and pa.fk_tenant_id = #{fkTenantId}
	</select>
	
	<!-- 自定义查询电子病历 -->
	<select id="selectPatientEHR" parameterType="java.util.Map" resultMap="manageResultMap">
		<![CDATA[
		select
			distinct p.* 
		from 
			patient p
			${dynamicFrom}
		where 
			1 = 1
			${dynamicWhere}
		order by 
			p.initial
		]]>
	</select>
	<select id="selectByDrugStock" parameterType="com.xtt.common.dao.model.Patient" resultMap="ExtendResultMap">
		select pa.id, pa.`name`, pa.image_path
		FROM  patient_drug_stock pds
		LEFT JOIN drug dr ON dr.id = pds.fk_drug_id
		LEFT JOIN patient pa ON pa.id = pds.fk_patient_id
		WHERE pa.fk_tenant_id = ${fkTenantId}
		<if test="categoryIds != null">
			AND dr.pid in
			<foreach close=")" collection="categoryIds" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="initial != null and initial != ''">
			AND pa.initial = #{initial}
		</if>
		GROUP BY pa.id, pa.`name`, pa.image_path
		ORDER BY initial, id
	</select>
	<select id="selectPatientExistByIdNumber" parameterType="com.xtt.common.dao.model.Patient" resultType="Integer">
		SELECT count(*)
		FROM patient
		WHERE 
			fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
			AND id_number = #{idNumber,jdbcType=VARCHAR}
			<if test="id != null">
				AND id = #{id}
			</if>
	</select>
	
	<!-- 根据是否转归来查询患者信息列表 -->
	<select id="selectPatientByDelFlag" resultMap="ExtendResultMap">
		select name,sex,birthday,DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(birthday, '00-%m-%d')) AS age from patient where del_flag = 0
	</select>
</mapper>