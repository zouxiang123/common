<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.PatientMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="initial" jdbcType="VARCHAR" property="initial" />
    <result column="spell_initials" jdbcType="VARCHAR" property="spellInitials" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="id_type" jdbcType="VARCHAR" property="idType" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="image_path" jdbcType="VARCHAR" property="imagePath" />
    <result column="work_unit" jdbcType="VARCHAR" property="workUnit" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="province" jdbcType="INTEGER" property="province" />
    <result column="county" jdbcType="INTEGER" property="county" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="emergency_contacts" jdbcType="VARCHAR" property="emergencyContacts" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="emergency_mobile" jdbcType="VARCHAR" property="emergencyMobile" />
    <result column="emergency_mobile2" jdbcType="VARCHAR" property="emergencyMobile2" />
    <result column="emergency_mobile3" jdbcType="VARCHAR" property="emergencyMobile3" />
    <result column="blood_abo" jdbcType="VARCHAR" property="bloodAbo" />
    <result column="blood_rh" jdbcType="VARCHAR" property="bloodRh" />
    <result column="barcode_path" jdbcType="VARCHAR" property="barcodePath" />
    <result column="height" jdbcType="DECIMAL" property="height" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="culture" jdbcType="VARCHAR" property="culture" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="dialysis_times" jdbcType="INTEGER" property="dialysisTimes" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, account, name, initial, spell_initials, password, id_type, id_number, sex, birthday, 
    image_path, work_unit, profession, province, county, address, mobile, emergency_contacts, 
    email, emergency_mobile, emergency_mobile2, emergency_mobile3, blood_abo, blood_rh, 
    barcode_path, height, weight, nation, culture, create_time, create_user_id, update_time, 
    update_user_id, dialysis_times
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    <include refid="Base_Column_List" />
    from patient
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from patient
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into patient (id, account, name, 
      initial, spell_initials, password, 
      id_type, id_number, sex, 
      birthday, image_path, work_unit, 
      profession, province, county, 
      address, mobile, emergency_contacts, 
      email, emergency_mobile, emergency_mobile2, 
      emergency_mobile3, blood_abo, blood_rh, 
      barcode_path, height, weight, 
      nation, culture, create_time, 
      create_user_id, update_time, update_user_id, 
      dialysis_times)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{initial,jdbcType=VARCHAR}, #{spellInitials,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{idType,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{imagePath,jdbcType=VARCHAR}, #{workUnit,jdbcType=VARCHAR}, 
      #{profession,jdbcType=VARCHAR}, #{province,jdbcType=INTEGER}, #{county,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{emergencyContacts,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{emergencyMobile,jdbcType=VARCHAR}, #{emergencyMobile2,jdbcType=VARCHAR}, 
      #{emergencyMobile3,jdbcType=VARCHAR}, #{bloodAbo,jdbcType=VARCHAR}, #{bloodRh,jdbcType=VARCHAR}, 
      #{barcodePath,jdbcType=VARCHAR}, #{height,jdbcType=DECIMAL}, #{weight,jdbcType=DECIMAL}, 
      #{nation,jdbcType=VARCHAR}, #{culture,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, 
      #{dialysisTimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="initial != null">
        initial,
      </if>
      <if test="spellInitials != null">
        spell_initials,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="idType != null">
        id_type,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="imagePath != null">
        image_path,
      </if>
      <if test="workUnit != null">
        work_unit,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="emergencyContacts != null">
        emergency_contacts,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emergencyMobile != null">
        emergency_mobile,
      </if>
      <if test="emergencyMobile2 != null">
        emergency_mobile2,
      </if>
      <if test="emergencyMobile3 != null">
        emergency_mobile3,
      </if>
      <if test="bloodAbo != null">
        blood_abo,
      </if>
      <if test="bloodRh != null">
        blood_rh,
      </if>
      <if test="barcodePath != null">
        barcode_path,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="culture != null">
        culture,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="dialysisTimes != null">
        dialysis_times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="initial != null">
        #{initial,jdbcType=VARCHAR},
      </if>
      <if test="spellInitials != null">
        #{spellInitials,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        #{idType,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="imagePath != null">
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=INTEGER},
      </if>
      <if test="county != null">
        #{county,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContacts != null">
        #{emergencyContacts,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile != null">
        #{emergencyMobile,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile2 != null">
        #{emergencyMobile2,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile3 != null">
        #{emergencyMobile3,jdbcType=VARCHAR},
      </if>
      <if test="bloodAbo != null">
        #{bloodAbo,jdbcType=VARCHAR},
      </if>
      <if test="bloodRh != null">
        #{bloodRh,jdbcType=VARCHAR},
      </if>
      <if test="barcodePath != null">
        #{barcodePath,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="culture != null">
        #{culture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="dialysisTimes != null">
        #{dialysisTimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update patient
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="initial != null">
        initial = #{initial,jdbcType=VARCHAR},
      </if>
      <if test="spellInitials != null">
        spell_initials = #{spellInitials,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        id_type = #{idType,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="imagePath != null">
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        work_unit = #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContacts != null">
        emergency_contacts = #{emergencyContacts,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile != null">
        emergency_mobile = #{emergencyMobile,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile2 != null">
        emergency_mobile2 = #{emergencyMobile2,jdbcType=VARCHAR},
      </if>
      <if test="emergencyMobile3 != null">
        emergency_mobile3 = #{emergencyMobile3,jdbcType=VARCHAR},
      </if>
      <if test="bloodAbo != null">
        blood_abo = #{bloodAbo,jdbcType=VARCHAR},
      </if>
      <if test="bloodRh != null">
        blood_rh = #{bloodRh,jdbcType=VARCHAR},
      </if>
      <if test="barcodePath != null">
        barcode_path = #{barcodePath,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="culture != null">
        culture = #{culture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="dialysisTimes != null">
        dialysis_times = #{dialysisTimes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.Patient">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update patient
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      initial = #{initial,jdbcType=VARCHAR},
      spell_initials = #{spellInitials,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      image_path = #{imagePath,jdbcType=VARCHAR},
      work_unit = #{workUnit,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      province = #{province,jdbcType=INTEGER},
      county = #{county,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      emergency_contacts = #{emergencyContacts,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      emergency_mobile = #{emergencyMobile,jdbcType=VARCHAR},
      emergency_mobile2 = #{emergencyMobile2,jdbcType=VARCHAR},
      emergency_mobile3 = #{emergencyMobile3,jdbcType=VARCHAR},
      blood_abo = #{bloodAbo,jdbcType=VARCHAR},
      blood_rh = #{bloodRh,jdbcType=VARCHAR},
      barcode_path = #{barcodePath,jdbcType=VARCHAR},
      height = #{height,jdbcType=DECIMAL},
      weight = #{weight,jdbcType=DECIMAL},
      nation = #{nation,jdbcType=VARCHAR},
      culture = #{culture,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      dialysis_times = #{dialysisTimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- user define -->
  <resultMap id="POResultMap" type="com.xtt.common.dao.po.PatientPO" extends="BaseResultMap">
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="county_name" jdbcType="VARCHAR" property="countyName" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="fk_tenant_id" jdbcType="INTEGER" property="fkTenantId" />
    <result column="sys_owner" jdbcType="VARCHAR" property="sysOwner" />
    <result column="is_enable" jdbcType="VARCHAR" property="isEnable" />
  </resultMap>
  <!-- 根据自定义条件查询数据 -->
  <select id="listByCondition" parameterType="com.xtt.common.dao.po.PatientPO" resultMap="POResultMap">
    select p.*, DATE_FORMAT(IFNULL(hd_p.deathday,NOW()), '%Y') - DATE_FORMAT(p.birthday, '%Y') - (DATE_FORMAT(IFNULL(hd_p.deathday,NOW()), '00-%m-%d') &lt; DATE_FORMAT(p.birthday, '00-%m-%d')) AS age
        , pv.`name` province_name
        , county.`name` county_name
        , po.fk_tenant_id, po.sys_owner, po.is_enable, GROUP_CONCAT(DISTINCT po.sys_owner) AS multiSysOwner, GROUP_CONCAT(DISTINCT po.fk_tenant_id) AS multiTenantId
    FROM patient p
    JOIN patient_owner po ON po.fk_patient_id = p.id
    LEFT JOIN province pv on p.province = pv.id
    LEFT JOIN county on p.county = county.id
    LEFT JOIN hd_patient_extend hd_p on hd_p.id = p.id
    <where>
      <if test="name != null and name != ''">
        p.name like concat('%', #{name} ,'%')
      </if>
      <if test="account != null">
        AND p.account = #{account}
      </if>
      <if test="initial != null">
        AND p.initial = #{initial}
      </if>
      <if test="idNumber != null">
        AND p.id_number = #{idNumber}
      </if>
      <if test="sex != null">
        AND p.sex = #{sex}
      </if>
      <if test="birthday != null">
        AND p.birthday = #{birthday,jdbcType=DATE}
      </if>
      <if test="mobile != null">
        AND p.mobile = #{mobile}
      </if>
      <if test="emergencyMobile != null">
        AND p.emergency_mobile = #{emergencyMobile}
      </if>
      <if test="province != null">
        AND p.province = #{province}
      </if>
      <if test="county != null">
        AND p.county = #{county}
      </if>
      <if test="hasSpellInitials != null and hasSpellInitials">
        AND p.spell_initials is not null
      </if>
      <if test="hasSpellInitials != null and !hasSpellInitials">
        AND p.spell_initials is null
      </if>
      <if test="fkTenantId != null">
        AND po.fk_tenant_id = #{fkTenantId}
      </if>
      <if test="sysOwner != null">
        AND po.sys_owner = #{sysOwner}
      </if>
      <if test="isEnable != null">
        AND po.is_enable = #{isEnable}
      </if>
    </where>
    GROUP BY p.id
    ORDER BY p.initial,p.name
  </select>
  
  <!-- 根据id查询数据，包含省市区，年龄等信息 -->
  <select id="getById" parameterType="java.lang.Long" resultMap="POResultMap">
    SELECT p.*, DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(p.birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt; DATE_FORMAT(p.birthday, '00-%m-%d')) AS age
        ,pv.`name` province_name
        ,county.`name` county_name
    FROM patient p
    LEFT JOIN province pv on p.province = pv.id
    LEFT JOIN county on p.county = county.id
    WHERE p.id = #{id}
  </select>
   <!-- 根据自定义条件统计患者人数 -->
  <select id="countByCondition" parameterType="com.xtt.common.dao.model.Patient" resultMap="POResultMap">
    SELECT count(p.id) FROM patient p
    JOIN patient_owner po ON po.fk_patient_id = p.id
    <where>
      <if test="name != null and name != ''">
        p.name like concat('%', #{name} ,'%')
      </if>
      <if test="account != null">
        AND p.account = #{account}
      </if>
      <if test="initial != null">
        AND p.initial = #{initial}
      </if>
      <if test="idNumber != null">
        AND p.id_number = #{idNumber}
      </if>
      <if test="sex != null">
        AND p.sex = #{sex}
      </if>
      <if test="birthday != null">
        AND p.birthday = #{birthday,jdbcType=DATE}
      </if>
      <if test="mobile != null">
        AND p.mobile = #{mobile}
      </if>
      <if test="emergencyMobile != null">
        AND p.emergency_mobile = #{emergencyMobile}
      </if>
      <if test="province != null">
        AND p.province = #{province}
      </if>
      <if test="county != null">
        AND p.county = #{county}
      </if>
      <if test="fkTenantId != null">
        AND po.fk_tenant_id = #{fkTenantId}
      </if>
      <if test="sysOwner != null">
        AND po.sys_owner = #{sysOwner}
      </if>
      <if test="isEnable != null">
        AND po.is_enable = #{isEnable}
      </if>
    </where>
    GROUP BY p.id
  </select>
  <!-- 根据患者idNumber查询数据 -->
  <select id="listByIdNumber" resultMap="POResultMap">
    SELECT p.* FROM patient p 
    WHERE p.id_number = #{idNumber} 
    <if test="nePatientId !=null">
        AND p.id != #{nePatientId}
    </if>
  </select>
  <!-- 患者的登陆 -->
  <select id="login" resultMap="BaseResultMap">
    SELECT p.* FROM patient p WHERE p.account=#{account} AND p.password=#{password}
  </select>
  
    <!-- 通过手机号查询患者信息个数 -->
    <select id="getCountByMobile" resultType="java.lang.Integer">
        select count(id) from patient where mobile = #{mobile} 
        <if test="neId != null"> AND id != #{neId}</if>
    </select>

    <!-- 通过手机号查询患者信息 -->
    <select id="listByMobile" resultMap="POResultMap">
        select * from patient where mobile = #{mobile}
        <if test="neId != null"> AND id != #{neId}</if>
    </select>
  <resultMap id="ResultMap" type="com.xtt.common.dao.po.PatientPO" extends="POResultMap">
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
    <result column="registerTime" jdbcType="INTEGER" property="registerTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
    <!-- 查询该年的原发病详情 -->
    <select id="listDiagnosisPatientByCondtion"   parameterType="map" resultMap="ResultMap">
        SELECT
              p.`name`,
              cdd.item_name,
              cdd.item_code,
              DATE_FORMAT(cdev.create_time, '%Y-%m-%d') registerTime,
              cdev.content 
        FROM
            cm_diagnosis_entity_value cdev
                INNER JOIN cm_dict_diagnosis cdd ON cdev.item_code=cdd.item_code
        INNER JOIN patient p ON cdev.fk_patient_id = p.id  AND cdev.fk_tenant_id = #{tenantId}
        LEFT JOIN hd_patient_extend hpe ON p.id = hpe.id
        LEFT JOIN cm_diagnosis_hist cdh ON hpe.id = cdh.fk_patient_id
        WHERE
         DATE_FORMAT(cdev.create_time, '%Y')=#{year}
          AND hpe.fk_tenant_id = 10101
         <if test="diagonsisItemCode!=null and diagonsisItemCode!=''">
          AND  cdev.item_code = #{diagonsisItemCode}
         </if>
         <if test="sex!=null and sex!=''">
         AND p.sex = #{sex}
         </if>
         <if test="isTemp!=null and isTemp!=''">
         AND hpe.is_temp = #{isTemp}
         </if>
          <if test="minAge!=null and maxAge!=null">
        AND timestampdiff(YEAR, p.birthday, now()) BETWEEN #{minAge} AND #{maxAge}
        </if>
        <if test="minDialysisAge!=null and maxDialysisAge!=null">
         AND timestampdiff(YEAR,cdh.first_treatment_date,now()) BETWEEN #{minDialysisAge} AND #{maxDialysisAge}
        </if>
        AND cdd.item_code LIKE 'LC%'
    </select>
</mapper>