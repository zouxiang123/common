<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.AssayHospDictGroupMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.AssayHospDictGroup">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="is_auto" jdbcType="BIT" property="isAuto" />
    <result column="fk_tenant_id" jdbcType="INTEGER" property="fkTenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, group_id, group_name, is_auto, fk_tenant_id, create_time, create_user_id, update_time, 
    update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    <include refid="Base_Column_List" />
    from assay_hosp_dict_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from assay_hosp_dict_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.AssayHospDictGroup">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into assay_hosp_dict_group (id, group_id, group_name, 
      is_auto, fk_tenant_id, create_time, 
      create_user_id, update_time, update_user_id
      )
    values (#{id,jdbcType=BIGINT}, #{groupId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, 
      #{isAuto,jdbcType=BIT}, #{fkTenantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.AssayHospDictGroup">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into assay_hosp_dict_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="isAuto != null">
        is_auto,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="isAuto != null">
        #{isAuto,jdbcType=BIT},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.AssayHospDictGroup">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update assay_hosp_dict_group
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="isAuto != null">
        is_auto = #{isAuto,jdbcType=BIT},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.AssayHospDictGroup">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update assay_hosp_dict_group
    set group_id = #{groupId,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      is_auto = #{isAuto,jdbcType=BIT},
      fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
<!-- user define -->
<!-- 根据groupId查询是否唯一 -->
    <select id="getCountByGroupId" resultType="int">
        SELECT count('1') from assay_hosp_dict_group
        <where>
          <if test="groupId != null">
            and group_id = #{groupId,jdbcType=VARCHAR}
          </if>
          <if test="tenantId != null">
            and fk_tenant_id = #{tenantId,jdbcType=INTEGER}
          </if>
        </where> 
    </select>
    <!-- 根据租户号删除数据 -->
    <delete id="deleteByTenant">
        delete from assay_hosp_dict_group where fk_tenant_id = #{tenantId,jdbcType=INTEGER}
    </delete>
    <!-- 根据flag 标识符查询数据 -->
    <select id="listGroupNameByfale" resultMap="BaseResultMap">
        SELECT group_id,group_name from assay_hosp_dict_group where is_auto = #{isAuto,jdbcType=BIT}
    </select>

</mapper>