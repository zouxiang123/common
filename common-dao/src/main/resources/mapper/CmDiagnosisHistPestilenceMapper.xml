<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.CmDiagnosisHistPestilenceMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fk_patient_id" jdbcType="BIGINT" property="fkPatientId" />
    <result column="diagnostic_date" jdbcType="DATE" property="diagnosticDate" />
    <result column="diagnostic_name" jdbcType="VARCHAR" property="diagnosticName" />
    <result column="other_diagnostic_name" jdbcType="VARCHAR" property="otherDiagnosticName" />
    <result column="activity_state" jdbcType="VARCHAR" property="activityState" />
    <result column="treatment" jdbcType="VARCHAR" property="treatment" />
    <result column="other_treatment" jdbcType="VARCHAR" property="otherTreatment" />
    <result column="fk_tenant_id" jdbcType="BIGINT" property="fkTenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, fk_patient_id, diagnostic_date, diagnostic_name, other_diagnostic_name, activity_state, treatment, other_treatment, fk_tenant_id,
    create_time, create_user_id, update_time, update_user_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="POResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select
    cdhp.*,
    (case when usu.name is not null and usu.name != '' then usu.name else su.name end) as operatorName
    from cm_diagnosis_hist_pestilence cdhp, sys_user su, sys_user usu
    where su.id = cdhp.create_user_id and usu.id = cdhp.update_user_id
    and cdhp.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from cm_diagnosis_hist_pestilence
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into cm_diagnosis_hist_pestilence (id, fk_patient_id, diagnostic_date, 
      diagnostic_name, other_diagnostic_name, activity_state, treatment, other_treatment,
      fk_tenant_id, create_time, create_user_id, 
      update_time, update_user_id, remark
      )
    values (#{id,jdbcType=BIGINT}, #{fkPatientId,jdbcType=BIGINT}, #{diagnosticDate,jdbcType=DATE}, 
      #{diagnosticName,jdbcType=VARCHAR}, #{otherDiagnosticName,jdbcType=VARCHAR}, #{activityState,jdbcType=VARCHAR},
      #{treatment,jdbcType=VARCHAR}, #{otherTreatment,jdbcType=VARCHAR},
      #{fkTenantId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into cm_diagnosis_hist_pestilence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fkPatientId != null">
        fk_patient_id,
      </if>
      <if test="diagnosticDate != null">
        diagnostic_date,
      </if>
      <if test="diagnosticName != null">
        diagnostic_name,
      </if>
      <if test="otherDiagnosticName != null">
        other_diagnostic_name,
      </if>
      <if test="activityState != null">
        activity_state,
      </if>
      <if test="treatment != null">
        treatment,
      </if>
      <if test="otherTreatment != null">
        other_treatment,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fkPatientId != null">
        #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="diagnosticDate != null">
        #{diagnosticDate,jdbcType=DATE},
      </if>
      <if test="diagnosticName != null">
        #{diagnosticName,jdbcType=VARCHAR},
      </if>
      <if test="otherDiagnosticName != null">
        #{otherDiagnosticName,jdbcType=VARCHAR},
      </if>
      <if test="activityState != null">
        #{activityState,jdbcType=VARCHAR},
      </if>
      <if test="treatment != null">
        #{treatment,jdbcType=VARCHAR},
      </if>
      <if test="otherTreatment != null">
        #{otherTreatment,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update cm_diagnosis_hist_pestilence
    <set>
      <if test="fkPatientId != null">
        fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="diagnosticDate != null">
        diagnostic_date = #{diagnosticDate,jdbcType=DATE},
      </if>
      <if test="diagnosticName != null">
        diagnostic_name = #{diagnosticName,jdbcType=VARCHAR},
      </if>
      <if test="otherDiagnosticName != null">
        other_diagnostic_name = #{otherDiagnosticName,jdbcType=VARCHAR},
      </if>
      <if test="activityState != null">
        activity_state = #{activityState,jdbcType=VARCHAR},
      </if>
      <if test="treatment != null">
        treatment = #{treatment,jdbcType=VARCHAR},
      </if>
      <if test="otherTreatment != null">
        other_treatment = #{otherTreatment,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update cm_diagnosis_hist_pestilence
    set fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      diagnostic_date = #{diagnosticDate,jdbcType=DATE},
      diagnostic_name = #{diagnosticName,jdbcType=VARCHAR},
      other_diagnostic_name = #{otherDiagnosticName,jdbcType=VARCHAR},
      activity_state = #{activityState,jdbcType=VARCHAR},
      treatment = #{treatment,jdbcType=VARCHAR},
      other_treatment = #{otherTreatment,jdbcType=VARCHAR},
      fk_tenant_id = #{fkTenantId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.CmDiagnosisHistPestilence">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update cm_diagnosis_hist_pestilence
    set fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      diagnostic_date = #{diagnosticDate,jdbcType=DATE},
      diagnostic_name = #{diagnosticName,jdbcType=VARCHAR},
      other_diagnostic_name = #{otherDiagnosticName,jdbcType=VARCHAR},
      activity_state = #{activityState,jdbcType=VARCHAR},
      treatment = #{treatment,jdbcType=VARCHAR},
      other_treatment = #{otherTreatment,jdbcType=VARCHAR},
      fk_tenant_id = #{fkTenantId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 自定义 -->
  <resultMap extends="ResultMapWithBLOBs" id="POResultMap" type="com.xtt.common.dao.po.CmDiagnosisHistPestilencePO" />
  
  <select id="selectByPatient" parameterType="java.lang.Long" resultMap="POResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    cdhp.*,
    (case when usu.name is not null and usu.name != '' then usu.name else su.name end) as operatorName
    from cm_diagnosis_hist_pestilence cdhp, sys_user su, sys_user usu
    where su.id = cdhp.create_user_id and usu.id = cdhp.update_user_id
    and cdhp.fk_patient_id = #{patientId,jdbcType=BIGINT} order by cdhp.id desc
  </select>
</mapper>