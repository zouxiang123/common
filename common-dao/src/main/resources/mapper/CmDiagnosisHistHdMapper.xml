<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.CmDiagnosisHistHdMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fk_patient_id" jdbcType="BIGINT" property="fkPatientId" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="start_reason" jdbcType="VARCHAR" property="startReason" />
    <result column="other_start_reason" jdbcType="VARCHAR" property="otherStartReason" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="end_reason" jdbcType="VARCHAR" property="endReason" />
    <result column="other_end_reason" jdbcType="VARCHAR" property="otherEndReason" />
    <result column="fk_tenant_id" jdbcType="BIGINT" property="fkTenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, fk_patient_id, start_date, start_reason, other_start_reason, end_date, end_reason, other_end_reason, fk_tenant_id,
    create_time, create_user_id, update_time, update_user_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="POResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select
    cdhh.*,
    (case when usu.name is not null and usu.name != '' then usu.name else su.name end) as operatorName
    from cm_diagnosis_hist_hd cdhh, sys_user su, sys_user usu
    where su.id = cdhh.create_user_id and usu.id = cdhh.update_user_id
    and cdhh.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from cm_diagnosis_hist_hd
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into cm_diagnosis_hist_hd (id, fk_patient_id, start_date, 
      start_reason, other_start_reason, end_date, end_reason, other_end_reason,
      fk_tenant_id, create_time, create_user_id, 
      update_time, update_user_id, remark
      )
    values (#{id,jdbcType=BIGINT}, #{fkPatientId,jdbcType=BIGINT}, #{startDate,jdbcType=DATE}, 
      #{startReason,jdbcType=VARCHAR}, #{otherStartReason,jdbcType=VARCHAR}, #{endDate,jdbcType=DATE},
      #{endReason,jdbcType=VARCHAR}, #{otherEndReason,jdbcType=VARCHAR},
      #{fkTenantId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into cm_diagnosis_hist_hd
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fkPatientId != null">
        fk_patient_id,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="startReason != null">
        start_reason,
      </if>
      <if test="otherStartReason != null">
        other_start_reason,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="endReason != null">
        end_reason,
      </if>
      <if test="otherEndReason != null">
        other_end_reason,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fkPatientId != null">
        #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="startReason != null">
        #{startReason,jdbcType=VARCHAR},
      </if>
      <if test="otherStartReason != null">
        #{otherStartReason,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="endReason != null">
        #{endReason,jdbcType=VARCHAR},
      </if>
      <if test="otherEndReason != null">
        #{otherEndReason,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update cm_diagnosis_hist_hd
    <set>
      <if test="fkPatientId != null">
        fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="startReason != null">
        start_reason = #{startReason,jdbcType=VARCHAR},
      </if>
      <if test="otherStartReason != null">
        other_start_reason = #{otherStartReason,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="endReason != null">
        end_reason = #{endReason,jdbcType=VARCHAR},
      </if>
      <if test="otherEndReason != null">
        other_end_reason = #{otherEndReason,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update cm_diagnosis_hist_hd
    set fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      start_date = #{startDate,jdbcType=DATE},
      start_reason = #{startReason,jdbcType=VARCHAR},
      other_start_reason = #{otherStartReason,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=DATE},
      end_reason = #{endReason,jdbcType=VARCHAR},
      other_end_reason = #{otherEndReason,jdbcType=VARCHAR},
      fk_tenant_id = #{fkTenantId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.CmDiagnosisHistHd">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update cm_diagnosis_hist_hd
    set fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      start_date = #{startDate,jdbcType=DATE},
      start_reason = #{startReason,jdbcType=VARCHAR},
      other_start_reason = #{otherStartReason,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=DATE},
      end_reason = #{endReason,jdbcType=VARCHAR},
      other_end_reason = #{otherEndReason,jdbcType=VARCHAR},
      fk_tenant_id = #{fkTenantId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 自定义 -->
  <resultMap extends="ResultMapWithBLOBs" id="POResultMap" type="com.xtt.common.dao.po.CmDiagnosisHistHdPO" />
  
  <select id="selectByPatient" parameterType="java.lang.Long" resultMap="POResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    cdhh.*,
    (case when usu.name is not null and usu.name != '' then usu.name else su.name end) as operatorName
    from cm_diagnosis_hist_hd cdhh, sys_user su, sys_user usu
    where su.id = cdhh.create_user_id and usu.id = cdhh.update_user_id
    and cdhh.fk_patient_id = #{patientId,jdbcType=BIGINT} order by cdhh.id desc
  </select>
</mapper>