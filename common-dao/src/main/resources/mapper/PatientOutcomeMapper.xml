<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtt.common.dao.mapper.PatientOutcomeMapper">
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.PatientOutcome">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fk_patient_id" jdbcType="BIGINT" property="fkPatientId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="record_date" jdbcType="DATE" property="recordDate" />
    <result column="type_reason" jdbcType="VARCHAR" property="typeReason" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="death_reason" jdbcType="VARCHAR" property="deathReason" />
    <result column="sys_owner" jdbcType="VARCHAR" property="sysOwner" />
    <result column="to_sys_owner" jdbcType="VARCHAR" property="toSysOwner" />
    <result column="fk_tenant_id" jdbcType="INTEGER" property="fkTenantId" />
    <result column="to_tenant_id" jdbcType="INTEGER" property="toTenantId" />
    <result column="to_tenant_name" jdbcType="VARCHAR" property="toTenantName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    id, fk_patient_id, type, record_date, type_reason, reason, death_reason, sys_owner, 
    to_sys_owner, fk_tenant_id, to_tenant_id, to_tenant_name, create_time, create_user_id, 
    update_time, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    select 
    <include refid="Base_Column_List" />
    from patient_outcome
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    delete from patient_outcome
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xtt.common.dao.model.PatientOutcome">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into patient_outcome (id, fk_patient_id, type, 
      record_date, type_reason, reason, 
      death_reason, sys_owner, to_sys_owner, 
      fk_tenant_id, to_tenant_id, to_tenant_name, 
      create_time, create_user_id, update_time, 
      update_user_id)
    values (#{id,jdbcType=BIGINT}, #{fkPatientId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, 
      #{recordDate,jdbcType=DATE}, #{typeReason,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{deathReason,jdbcType=VARCHAR}, #{sysOwner,jdbcType=VARCHAR}, #{toSysOwner,jdbcType=VARCHAR}, 
      #{fkTenantId,jdbcType=INTEGER}, #{toTenantId,jdbcType=INTEGER}, #{toTenantName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.PatientOutcome">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    insert into patient_outcome
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fkPatientId != null">
        fk_patient_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="recordDate != null">
        record_date,
      </if>
      <if test="typeReason != null">
        type_reason,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="deathReason != null">
        death_reason,
      </if>
      <if test="sysOwner != null">
        sys_owner,
      </if>
      <if test="toSysOwner != null">
        to_sys_owner,
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id,
      </if>
      <if test="toTenantId != null">
        to_tenant_id,
      </if>
      <if test="toTenantName != null">
        to_tenant_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fkPatientId != null">
        #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null">
        #{recordDate,jdbcType=DATE},
      </if>
      <if test="typeReason != null">
        #{typeReason,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="deathReason != null">
        #{deathReason,jdbcType=VARCHAR},
      </if>
      <if test="sysOwner != null">
        #{sysOwner,jdbcType=VARCHAR},
      </if>
      <if test="toSysOwner != null">
        #{toSysOwner,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="toTenantId != null">
        #{toTenantId,jdbcType=INTEGER},
      </if>
      <if test="toTenantName != null">
        #{toTenantName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtt.common.dao.model.PatientOutcome">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update patient_outcome
    <set>
      <if test="fkPatientId != null">
        fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null">
        record_date = #{recordDate,jdbcType=DATE},
      </if>
      <if test="typeReason != null">
        type_reason = #{typeReason,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="deathReason != null">
        death_reason = #{deathReason,jdbcType=VARCHAR},
      </if>
      <if test="sysOwner != null">
        sys_owner = #{sysOwner,jdbcType=VARCHAR},
      </if>
      <if test="toSysOwner != null">
        to_sys_owner = #{toSysOwner,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null">
        fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="toTenantId != null">
        to_tenant_id = #{toTenantId,jdbcType=INTEGER},
      </if>
      <if test="toTenantName != null">
        to_tenant_name = #{toTenantName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtt.common.dao.model.PatientOutcome">
    <!--
      WARNING - @mbggenerated, do not modify!
    -->
    update patient_outcome
    set fk_patient_id = #{fkPatientId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      record_date = #{recordDate,jdbcType=DATE},
      type_reason = #{typeReason,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      death_reason = #{deathReason,jdbcType=VARCHAR},
      sys_owner = #{sysOwner,jdbcType=VARCHAR},
      to_sys_owner = #{toSysOwner,jdbcType=VARCHAR},
      fk_tenant_id = #{fkTenantId,jdbcType=INTEGER},
      to_tenant_id = #{toTenantId,jdbcType=INTEGER},
      to_tenant_name = #{toTenantName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- use define -->
  <resultMap extends="BaseResultMap" id="POResultMap" type="com.xtt.common.dao.po.PatientOutcomePO" />
  
  <select id="selectByCondition" parameterType="com.xtt.common.dao.po.PatientOutcomePO" resultMap="POResultMap">
  	select po.* from patient_outcome po
  	<where>
      <if test="id != null">
        po.id = #{id} 
      </if>
 	  <if test="fkPatientId != null">
        AND po.fk_patient_id = #{fkPatientId}
      </if>
      <if test="type != null">
        AND po.type = #{type}
      </if>
      <if test="recordDate != null">
        AND po.record_date = #{recordDate,jdbcType=DATE}
      </if>
      <if test="startTime != null">
        AND po.record_date &gt;= #{startTime,jdbcType=DATE}
      </if>
      <if test="endTime != null">
        AND po.record_date &lt;= #{endTime,jdbcType=DATE}
      </if>
      <if test="reason != null">
        AND po.reason = #{reason}
      </if>
      <if test="sysOwner != null">
        AND po.sys_owner = #{sysOwner}
      </if>
      <if test="fkTenantId != null">
        AND po.fk_tenant_id = #{fkTenantId}
      </if>
      <if test="excludeTypes !=null">
        AND po.type not in <foreach close=")" collection="excludeTypes" item="item" open="(" separator=",">#{item}</foreach>
      </if>
      <if test="multiTenant != null">
        AND po.fk_tenant_id in (${multiTenant })
      </if>
      <if test="types !=null">
        AND po.type in <foreach close=")" collection="types" item="item" open="(" separator=",">#{item}</foreach>
      </if>
  	</where>
  	ORDER BY po.record_date DESC, po.id DESC
  </select>
  
    <!-- 查询患者最新的一条转归记录 -->
    <select id="listLatest" resultMap="POResultMap">
        SELECT po.* FROM patient_outcome po
        JOIN (
            SELECT po1.fk_patient_id, MAX(po1.record_date) AS time, po1.fk_tenant_id
            FROM patient_outcome po1
            WHERE po1.sys_owner = #{sysOwner}
                <if test="patientIds != null and patientIds.size()&gt;0">
                   AND po1.fk_patient_id in <foreach close=")" collection="patientIds" item="item" open="(" separator=",">#{item}</foreach>
                </if>
                <if test="month != null and month != ''">
                   AND DATE_FORMAT(po1.record_date,'%Y-%m') = #{month}
                </if>
                <if test="multiTenant != null">
                    AND po1.fk_tenant_id in (${multiTenant })
                </if>
                <if test="startTime != null">
                   AND po1.record_date &gt;= #{startTime}
                </if>
                <if test="endTime != null">
                   AND po1.record_date &lt;= #{endTime}
                </if>
            GROUP BY po1.fk_tenant_id,po1.fk_patient_id
        ) t ON t.fk_patient_id = po.fk_patient_id AND po.record_date = t.time AND t.fk_tenant_id = po.fk_tenant_id
        WHERE po.fk_tenant_id in (${multiTenant }) AND po.sys_owner = #{sysOwner}
        ORDER BY po.fk_patient_id
    </select>
    <select id="selectCountByPatientId" resultType="int">
        SELECT count('1') from patient_outcome 
        <where>
            <if test="fkPatientId != null">
                fk_patient_id = #{fkPatientId}
            </if>
            <if test="startTime != null">
                and record_date &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and record_date &lt;= #{endTime}
            </if>
            <if test="fkTenantId != null">
                and fk_tenant_id = #{fkTenantId}
            </if>
            <if test="excludeTypes !=null">
                and type not in 
                <foreach close=")" collection="excludeTypes" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    
	<select id="selectPatientByMonth" resultType="long">
        SELECT distinct fk_patient_id 
        from patient_outcome 
        <where>
            <if test="startTime != null">
                and record_date &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and record_date &lt;= #{endTime}
            </if>
            <if test="excludeTypes !=null">
                and type not in 
                <foreach close=")" collection="excludeTypes" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
       </where> 
        
	</select>
</mapper>