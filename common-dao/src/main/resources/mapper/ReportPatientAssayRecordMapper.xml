<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtt.common.dao.mapper.ReportPatientAssayRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xtt.common.dao.model.ReportPatientAssayRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:28:10 CST 2016.
    -->
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="fk_patient_id" property="fkPatientId" jdbcType="BIGINT" />
    <result column="assay_month" property="assayMonth" jdbcType="VARCHAR" />
    <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="result_tips" property="resultTips" jdbcType="VARCHAR" />
    <result column="fk_tenant_id" property="fkTenantId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="assay_season" property="assaySeason" jdbcType="VARCHAR" />
    <result column="assay_year" property="assayYear" jdbcType="VARCHAR" />
    <result column="date_type" property="dateType" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:28:10 CST 2016.
    -->
    insert into report_patient_assay_record (id, fk_patient_id, assay_month, 
      item_code, item_name, result, 
      result_tips, fk_tenant_id, create_time, 
      assay_season, assay_year, date_type
      )
    values (#{id,jdbcType=BIGINT}, #{fkPatientId,jdbcType=BIGINT}, #{assayMonth,jdbcType=VARCHAR}, 
      #{itemCode,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{resultTips,jdbcType=VARCHAR}, #{fkTenantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{assaySeason,jdbcType=VARCHAR}, #{assayYear,jdbcType=VARCHAR}, #{dateType,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 01 14:28:10 CST 2016.
    -->
    insert into report_patient_assay_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fkPatientId != null" >
        fk_patient_id,
      </if>
      <if test="assayMonth != null" >
        assay_month,
      </if>
      <if test="itemCode != null" >
        item_code,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="resultTips != null" >
        result_tips,
      </if>
      <if test="fkTenantId != null" >
        fk_tenant_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="assaySeason != null" >
        assay_season,
      </if>
      <if test="assayYear != null" >
        assay_year,
      </if>
      <if test="dateType != null" >
        date_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fkPatientId != null" >
        #{fkPatientId,jdbcType=BIGINT},
      </if>
      <if test="assayMonth != null" >
        #{assayMonth,jdbcType=VARCHAR},
      </if>
      <if test="itemCode != null" >
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="resultTips != null" >
        #{resultTips,jdbcType=VARCHAR},
      </if>
      <if test="fkTenantId != null" >
        #{fkTenantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="assaySeason != null" >
        #{assaySeason,jdbcType=VARCHAR},
      </if>
      <if test="assayYear != null" >
        #{assayYear,jdbcType=VARCHAR},
      </if>
      <if test="dateType != null" >
        #{dateType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- 自定义 -->
  <resultMap type="com.xtt.common.dao.po.ReportPatientAssayRecordPO" id="POResultMap" extends="BaseResultMap"></resultMap>
  
  <!-- 批量插入月份的化验统计数据 -->
  <insert id="insertBatchByMonth" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord">
    INSERT INTO report_patient_assay_record (fk_patient_id, item_code, item_name, assay_month
        , assay_season, assay_year, result, fk_tenant_id, create_time, date_type
        , result_tips
    )
    SELECT parb1.fk_patient_id,parb1.item_code,parb1.item_name 
        , #{assayMonth}, #{assaySeason}, #{assayYear}, ${sqlCondition}, #{fkTenantId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{dateType}
        , IF(((MAX(parb1.personal_min_value) is null OR MAX(parb1.personal_min_value) &lt; ${sqlCondition})
                AND (MAX(parb1.personal_max_value) is null OR MAX(parb1.personal_max_value) >= ${sqlCondition})), '1', '0') result_tips
    FROM (
        SELECT parb.fk_patient_id,parb.result_actual result
            ,ahd.personal_min_value,ahd.personal_max_value
            ,CASE WHEN ahd.fk_dict_code is null or ahd.fk_dict_code = '' THEN parb.item_code ELSE ahd.fk_dict_uk END item_code
            ,CASE WHEN ahd.fk_dict_code is null or ahd.fk_dict_code = '' THEN parb.item_name ELSE ahd.fk_dict_name END item_name
        FROM patient_assay_record_busi parb
        JOIN assay_hosp_dict ahd ON ahd.item_code = parb.item_code AND ahd.fk_tenant_id = parb.fk_tenant_id
        WHERE parb.result_actual is not null AND parb.fk_tenant_id = #{fkTenantId}
        <if test="itemCodes != null and itemCodes.size()>0">
            and parb.item_code in <foreach collection="itemCodes" item="item" open="(" separator="," close=")">#{item}</foreach>
        </if>
        <if test="startTime != null">
           and parb.assay_date &gt;= DATE(#{startTime})
        </if>
        <if test="endTime != null">
           and parb.assay_date &lt;= DATE(#{endTime})
        </if>
    ) parb1
    GROUP BY fk_patient_id, item_code, item_name
  </insert>
  
  <!-- 根据日期类型分组查询化验信息 -->
  <select id="selectByDateType" parameterType="com.xtt.common.dao.po.ReportPatientAssayRecordPO" resultMap="POResultMap">
  	 SELECT assay_month as dateValue, count(result) as allCount
	  <if test="minValue != null and maxValue == null">
		  , SUM(CASE WHEN result &lt; #{minValue} THEN 1 ELSE 0 END) noOkCount
		  , SUM(CASE WHEN result >= #{minValue} THEN 1 ELSE 0 END) okCount
		  , round(SUM(CASE WHEN result >= #{minValue} THEN 1 ELSE 0 END) / count(result) * 100, 2) as okRates
	  </if>
	  <if test="minValue != null and maxValue != null">
		  , SUM(CASE WHEN result &lt; #{minValue} THEN 1 ELSE 0 END) noOkCount
		  , SUM(CASE WHEN result >= #{minValue} AND result  &lt; #{maxValue} THEN 1 ELSE 0 END) okCount
		  , SUM(CASE WHEN result >= #{maxValue} THEN 1 ELSE 0 END) excessOkCount
		  , round(SUM(CASE WHEN result >= #{minValue} AND result  &lt; #{maxValue} THEN 1 ELSE 0 END) / count(result) * 100, 2) as okRates
	  </if>
	  <if test="minValue == null and maxValue != null">
		  , SUM(CASE WHEN result &lt; #{maxValue} THEN 1 ELSE 0 END) okCount
		  , SUM(CASE WHEN result >= #{maxValue} THEN 1 ELSE 0 END) excessOkCount
		  , round(SUM(CASE WHEN result &lt; #{maxValue} THEN 1 ELSE 0 END) / count(result) * 100, 2) as okRates
	  </if>
	  <if test="minValue == null and maxValue == null">
		  , count(result) - SUM(CASE WHEN result_tips = '1' THEN 1 ELSE 0 END) noOkCount
		  , SUM(CASE WHEN result_tips = '1' THEN 1 ELSE 0 END) okCount
		  , round(SUM(CASE WHEN result_tips = '1' THEN 1 ELSE 0 END) / count(result) * 100, 2) as okRates
	  </if>
	  , SUM(CASE WHEN result IS NULL OR result='' THEN 0 ELSE cast(result as DECIMAL(12,3)) END) as allSum
	  , round(AVG(CASE WHEN result IS NULL OR result='' THEN 0 ELSE cast(result as DECIMAL(12,3)) END), 2) as `avg`
	  , round(stddev_pop(CASE WHEN result IS NULL OR result='' THEN 0 ELSE cast(result as DECIMAL(12,3)) END), 2) as `pop`
	 FROM (SELECT DISTINCT
	        <!-- 因为report_patient_assay_record表中患者对应化验数据存在重复，所以这里先做去重。 -->
			<!-- <if test="dateType == 'm'.toString()"> -->
				p.assay_month
	          , p.result_tips
			<!-- </if>
			<if test="dateType == 's'.toString()">
				,p.assay_season as dateValue -->
			<!-- </if> -->
			, p.result
	        , p.fk_patient_id fkPatientId
		FROM report_patient_assay_record p
		INNER JOIN patient pa ON p.fk_patient_id = pa.id 
		<if test="patientLabelId != null">
		INNER JOIN patient_label_ref plf
		ON pa.id = plf.fk_patient_id AND plf.del_flag = false
		INNER JOIN patient_label pl on plf.fk_label_id = pl.id
		</if>
		WHERE p.fk_tenant_id = #{fkTenantId}
		AND p.result is not null
		AND p.item_code = #{itemCode}
		AND p.assay_year = #{assayYear,jdbcType=VARCHAR}
		<if test="patientLabelId != null">
		AND plf.fk_label_id=#{patientLabelId}
		AND (CASE WHEN pl.is_defualt = 1 THEN plf.fk_user_id=#{fkUserId} ELSE 1=1 END)
		</if>
	) a
	<!-- AND p.date_type = #{dateType} -->
	GROUP BY
	<!-- <if test="dateType == 'm'.toString()"> -->
		a.assay_month
	<!-- </if>
	<if test="dateType == 's'.toString()">
		p.assay_season
	</if> -->
  </select>
  
  <select id="selectPopByDateType" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord" resultType="java.lang.Double">
  	SELECT round(stddev_pop(CASE WHEN p.result IS NULL OR p.result='' THEN 0 ELSE cast(p.result as DECIMAL(12,3)) END), 2) as `pop`
	FROM report_patient_assay_record p
	WHERE p.fk_tenant_id = #{fkTenantId}
	AND p.item_code = #{itemCode}
	AND p.assay_year = #{assayYear,jdbcType=VARCHAR}
	AND p.date_type = #{dateType}
  </select>
  
  <select id="selectDetailByDateType" parameterType="com.xtt.common.dao.po.ReportPatientAssayRecordPO" resultMap="POResultMap">
  	SELECT DISTINCT p.result
  		<if test="minValue != null and maxValue == null">
			, CASE WHEN p.result >= #{minValue} THEN 1 ELSE 0 END as result_tips
			, CASE WHEN p.result &lt; #{minValue} THEN 1 ELSE 0 END noOkCount
			, CASE WHEN p.result >= #{minValue} THEN 1 ELSE 0 END okCount
		</if>
		<if test="minValue != null and maxValue != null">
			, CASE WHEN p.result >= #{minValue} AND p.result  &lt; #{maxValue} THEN 1 ELSE 0 END as result_tips
			, CASE WHEN p.result &lt; #{minValue} THEN 1 ELSE 0 END noOkCount
			, CASE WHEN p.result >= #{minValue} AND p.result  &lt; #{maxValue} THEN 1 ELSE 0 END okCount
			, CASE WHEN p.result >= #{maxValue} THEN 1 ELSE 0 END excessOkCount
		</if>
		<if test="minValue == null and maxValue != null">
			, CASE WHEN p.result &lt; #{maxValue} THEN 1 ELSE 0 END as result_tips
			, CASE WHEN p.result &lt; #{maxValue} THEN 1 ELSE 0 END okCount
			, CASE WHEN p.result >= #{maxValue} THEN 1 ELSE 0 END excessOkCount
		</if>
		<if test="minValue == null and maxValue == null">
			, CASE WHEN p.result_tips = '1' THEN 1 ELSE 0 END as result_tips
			, CASE WHEN p.result_tips != '1' THEN 1 ELSE 0 END noOkCount
			, CASE WHEN p.result_tips = '1' THEN 1 ELSE 0 END okCount
		</if> 
		, pa.`name` as patientName
	FROM report_patient_assay_record p
	INNER JOIN patient pa ON pa.id = p.fk_patient_id
  	<if test="patientLabelId != null">
	  INNER JOIN patient_label_ref plf
	  ON pa.id = plf.fk_patient_id AND plf.del_flag = false
	  INNER JOIN patient_label pl on plf.fk_label_id = pl.id
  	</if>
	WHERE p.fk_tenant_id = #{fkTenantId} AND p.result is not null 
	<if test="itemCode != null">
		AND p.item_code = #{itemCode}
	</if>
	<if test="dateValue != null and dateValue != ''">
		AND P.date_type = #{dateType}
		<if test="dateType == 'm'.toString()">
			AND p.assay_month = #{dateValue}
		</if>
		<if test="dateType == 's'.toString()">
			AND p.assay_season = #{dateValue}
		</if>
	</if>
	<if test="patientLabelId != null">
	  AND plf.fk_label_id=#{patientLabelId}
	  AND (CASE WHEN pl.is_defualt = 1 THEN plf.fk_user_id=#{fkUserId} ELSE 1=1 END)
	</if>
	order by pa.spell_initials
  </select>
  
  <!-- 删除所有化验项统计 -->
  <delete id="deleteAll">
  	delete from report_patient_assay_record where fk_tenant_id = #{fkTenantId}
  </delete>
  
  <delete id="deleteByCondition" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord">
  	delete from report_patient_assay_record
  	<where>
  		<if test="fkTenantId != null">
  			 fk_tenant_id = #{fkTenantId,jdbcType=INTEGER}
  		</if>
  		<if test="assayMonth != null and assayMonth != ''">
  			and assay_month = #{assayMonth}
  		</if>
  		<if test="assaySeason != null and assaySeason != ''">
  			and assay_season = #{assaySeason}
  		</if>
  		<if test="dateType != null and dateType != ''">
  			and date_type = #{dateType}
  		</if>
        <if test="itemCode != null">
            AND item_code = #{itemCode}
        </if>
        <if test="itemCodes !=null and itemCodes.size()>0">
            AND item_code in <foreach collection="itemCodes" item="item" separator="," open="(" close=")">#{item}</foreach>
        </if>
  	</where>
  </delete>
  
  <select id="selectExistCurrentMothodByMonth" resultType="int">
  	select count(fk_patient_id) from report_patient_assay_record where assay_month = #{month} and fk_tenant_id = #{tenantId}
    <if test="itemCodes !=null and itemCodes.size()>0">
        AND item_code in <foreach collection="itemCodes" item="item" separator="," open="(" close=")">#{item}</foreach>
    </if>
  </select>
  
  <insert id="insertPreMonthDate">
	  insert into report_patient_assay_record
	  	select 
			id,fk_patient_id,item_code,
			item_name,result,result_tips,
			fk_tenant_id,create_time,
			#{currentMonth} as assay_month
			,sample_code,
			test_method,
			#{currentSeason} as assay_season,
			#{currentYear} as assay_year,
			'm' as date_type
		from 
			report_patient_assay_record 
		where 
			assay_month = #{preMonth} and fk_tenant_id = #{tenantId}
            <if test="itemCodes !=null and itemCodes.size()>0">
                AND item_code in <foreach collection="itemCodes" item="item" separator="," open="(" close=")">#{item}</foreach>
            </if>
			and fk_patient_id not in(select  id from patient where del_flag = 1 and fk_tenant_id = #{tenantId})
  </insert>
    
  <select id="selectByReportPatientAssay" resultMap="BaseResultMap" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord">
    SELECT 
    	*
	FROM 
		report_patient_assay_record p
	WHERE 
		p.fk_tenant_id = #{fkTenantId}
		AND p.item_code = #{itemCode}
		AND p.assay_month = #{assayMonth}
		AND fk_patient_id = #{fkPatientId}
  </select>
  <update id="updateReportPatientAssay" parameterType="com.xtt.common.dao.model.ReportPatientAssayRecord">
  update report_patient_assay_record
  set item_name = #{itemName} ,result = #{result},result_tips = #{resultTips}
  	WHERE 
		fk_tenant_id = #{fkTenantId}
		AND item_code = #{itemCode}
		AND assay_month = #{assayMonth}
		AND fk_patient_id = #{fkPatientId}
  </update>
  
  
</mapper>