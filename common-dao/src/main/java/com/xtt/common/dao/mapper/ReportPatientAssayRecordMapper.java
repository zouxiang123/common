package com.xtt.common.dao.mapper;

import java.util.Collection;
import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.ReportPatientAssayRecord;
import com.xtt.common.dao.po.ReportPatientAssayRecordPO;

@Repository
public interface ReportPatientAssayRecordMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table report_patient_assay_record
     * 
     * @mbggenerated Tue May 24 16:23:01 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table report_patient_assay_record
     * 
     * @mbggenerated Tue May 24 16:23:01 CST 2016
     */
    int insert(ReportPatientAssayRecord record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table report_patient_assay_record
     * 
     * @mbggenerated Tue May 24 16:23:01 CST 2016
     */
    int insertSelective(ReportPatientAssayRecord record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table report_patient_assay_record
     * 
     * @mbggenerated Tue May 24 16:23:01 CST 2016
     */
    ReportPatientAssayRecord selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table report_patient_assay_record
     * 
     * @mbggenerated Tue May 24 16:23:01 CST 2016
     */
    int updateByPrimaryKeySelective(ReportPatientAssayRecord record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table report_patient_assay_record
     * 
     * @mbggenerated Tue May 24 16:23:01 CST 2016
     */
    int updateByPrimaryKey(ReportPatientAssayRecord record);

    // 自定义
    /**
     * 批量插入月份的化验统计数据
     * 
     * @Title: insertAuto
     * @param record
     * 
     */
    void insertBatchByMonth(ReportPatientAssayRecord record);

    /**
     * 根据日期类型分组查询化验统计
     * 
     * @Title: selectByDateType
     * @param record
     * @return
     * 
     */
    List<ReportPatientAssayRecordPO> selectByDateType(ReportPatientAssayRecordPO record);

    /**
     * 获取标准差
     * 
     * @Title: selectPopByDateType
     * @param record
     * @return
     * 
     */
    Double selectPopByDateType(ReportPatientAssayRecord record);

    /**
     * 根据日期类型查询化验详情
     * 
     * @Title: selectDetailByDateType
     * @param record
     * @return
     * 
     */
    List<ReportPatientAssayRecordPO> selectDetailByDateType(ReportPatientAssayRecordPO record);

    /**
     * 删除所有化验项统计
     * 
     * @param fkTenantId
     * 
     * @Title: deleteAll
     * 
     */
    void deleteAll(Integer fkTenantId);

    /**
     * 根据条件删除报表信息
     * 
     * @Title: deleteByCondition
     * @param record
     * @return
     * 
     */
    void deleteByCondition(ReportPatientAssayRecord record);

    /**
     * 根据当前年月，租户ID，获取数据个数
     * 
     * @Title: selectExistCurrentMothodByMonth
     * @param month
     * @param tenantId
     * @param itemCodes
     * @return
     *
     */
    int selectExistCurrentMothodByMonth(@Param("month") String month, @Param("tenantId") Integer tenantId,
                    @Param("itemCodes") Collection<String> itemCodes);

    /**
     * 同步复制上月数据同步到本月
     * 
     * @Title: insertPreMonthDate
     * @param currentMonth
     *            当前月
     * @param currentSeason
     *            当前季度
     * @param currentYear
     *            当前年
     * @param preMothd
     *            上月
     * @param tenantId
     *            租户ID
     * @param itemCodes
     *            项目编号
     *
     */
    void insertPreMonthDate(@Param("currentMonth") String currentMonth, @Param("currentSeason") String currentSeason,
                    @Param("currentYear") Integer currentYear, @Param("preMonth") String preMonth, @Param("tenantId") Integer tenantId,
                    @Param("itemCodes") Collection<String> itemCodes);

    /**
     * 获取患者化验结果记录 条件[租户ID,患者ID，月份，itemcode]
     * 
     * @Title: selectByReportPatientAssay
     * @param rpar
     * @return
     *
     */
    ReportPatientAssayRecord selectByReportPatientAssay(ReportPatientAssayRecord rpar);

    /**
     * 更新患者化验结果信息 条件[租户ID,患者ID，月份，itemcode]
     * 
     * @Title: updateReportPatientAssay
     * @param rpar
     *
     */
    void updateReportPatientAssay(ReportPatientAssayRecord rpar);
}