package com.xtt.common.dao.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.PatientAssayResult;
import com.xtt.common.dao.po.PatientAssayResultPO;

@Repository
public interface PatientAssayResultMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_result
     * 
     * @mbggenerated Mon Apr 25 14:55:57 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_result
     * 
     * @mbggenerated Mon Apr 25 14:55:57 CST 2016
     */
    int insert(PatientAssayResult record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_result
     * 
     * @mbggenerated Mon Apr 25 14:55:57 CST 2016
     */
    int insertSelective(PatientAssayResult record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_result
     * 
     * @mbggenerated Mon Apr 25 14:55:57 CST 2016
     */
    PatientAssayResult selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_result
     * 
     * @mbggenerated Mon Apr 25 14:55:57 CST 2016
     */
    int updateByPrimaryKeySelective(PatientAssayResult record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_result
     * 
     * @mbggenerated Mon Apr 25 14:55:57 CST 2016
     */
    int updateByPrimaryKey(PatientAssayResult record);

    /* 自定义 */
    List<PatientAssayResultPO> selectByCondition(PatientAssayResult record);

    /**
     * 根据患者ID查询最新的化验结果
     * 
     * @Title: selectByFkPatientIdAndEffective
     * @param id
     * @return
     */
    PatientAssayResult selectByFkPatientIdAndEffective(@Param("fkPatientId") Long id);

    /**
     * 查询患者的化验结果，用于判断结果变化
     * 
     * @Title: selectForCompareChange
     * @param fkPatientId
     * @return
     *
     */
    List<PatientAssayResult> selectForCompareChange(Long fkPatientId);
}