package com.xtt.common.dao.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.SysObj;

@Repository
public interface SysObjMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table sys_obj
     * 
     * @mbggenerated Tue Sep 08 13:30:46 CST 2015
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table sys_obj
     * 
     * @mbggenerated Tue Sep 08 13:30:46 CST 2015
     */
    int insert(SysObj record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table sys_obj
     * 
     * @mbggenerated Tue Sep 08 13:30:46 CST 2015
     */
    int insertSelective(SysObj record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table sys_obj
     * 
     * @mbggenerated Tue Sep 08 13:30:46 CST 2015
     */
    SysObj selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table sys_obj
     * 
     * @mbggenerated Tue Sep 08 13:30:46 CST 2015
     */
    int updateByPrimaryKeySelective(SysObj record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table sys_obj
     * 
     * @mbggenerated Tue Sep 08 13:30:46 CST 2015
     */
    int updateByPrimaryKey(SysObj record);

    /**
     * 查询该角色下所有菜单
     * 
     * @Title: selectMenuListByRoleId
     * @param roleIds
     * @param type
     * @return
     *
     */
    List<SysObj> selectMenuListByRoleId(@Param("roleIds") Long[] roleIds, @Param("types") String[] types, @Param("sysOwner") String sysOwner);

    /**
     * 查询当前租户该版本下所有菜单
     * 
     * @param tenantId
     * 
     * @Title: selectAllMenuListByVersion
     * @param roleId
     * @return
     *
     */
    List<SysObj> selectAllMenuList(@Param("version") String version, @Param("types") String[] types, @Param("sysOwner") String sysOwner);

    /**
     * 查询当前租户以及版本没有选中的菜单
     * 
     * @Title: selectNotSelected
     * @param valueByName
     * @param roleIds
     * @return
     *
     */
    List<SysObj> selectNotChecked(@Param("version") String version, @Param("roleIds") Long[] roleIds, @Param("types") String[] types,
                    @Param("sysOwner") String sysOwner);

    /**
     * 通过type和key 查询对象
     * 
     * @Title: selectByKey
     * @param key
     * @param types
     * @return
     *
     */
    SysObj selectByKey(@Param("key") String key, @Param("types") String[] types, @Param("sysOwner") String sysOwner);

    /**
     * 通过id删除menu
     * 
     * @Title: deleteMenuByIds
     * @param menuIds
     *
     */
    void deleteMenuByIds(Long[] menuIds);

    /**
     * 根据id列表查询数据
     * 
     * @Title: selectByIds
     * @param menuIds
     * @return
     *
     */
    List<SysObj> selectByIds(Long[] menuIds);
}