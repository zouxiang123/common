package com.xtt.common.dao.mapper;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.ClinicalDiagnosisResult;
import com.xtt.common.dao.po.ClinicalDiagnosisResultPO;

@Repository
public interface ClinicalDiagnosisResultMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table clinical_diagnosis_result
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table clinical_diagnosis_result
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int insert(ClinicalDiagnosisResult record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table clinical_diagnosis_result
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int insertSelective(ClinicalDiagnosisResult record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table clinical_diagnosis_result
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	ClinicalDiagnosisResult selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table clinical_diagnosis_result
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int updateByPrimaryKeySelective(ClinicalDiagnosisResult record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table clinical_diagnosis_result
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int updateByPrimaryKey(ClinicalDiagnosisResult record);

	/**
	 * 根据患者ID查询对象
	 * 
	 * @Title: selectByPatientId
	 * @param patientId
	 * @return ClinicalDiagnosisResult
	 * 
	 */
	List<ClinicalDiagnosisResultPO> selectByPatientId(Long patientId);

	/**
	 * 根据透析活动ID查询最新历史记录
	 * 
	 * @Title: selectByDCId
	 * @param pdId
	 *            患者诊断主表ID
	 * @return ClinicalDiagnosisResult
	 * 
	 */
	ClinicalDiagnosisResultPO selectByPDId(Long pdId);

	/**
	 * 
	 * @Title: groupByTypeForCount 根据类型计算今日患者不同类型的数量
	 * @param record
	 * @return
	 * 
	 */
	List<ClinicalDiagnosisResultPO> groupByTypeForCount(ClinicalDiagnosisResult record);
}