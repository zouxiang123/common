package com.xtt.common.dao.mapper;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.CkdStage;
import com.xtt.common.dao.po.CkdStagePO;

@Repository
public interface CkdStageMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ckd_stage
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ckd_stage
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int insert(CkdStage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ckd_stage
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int insertSelective(CkdStage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ckd_stage
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	CkdStage selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ckd_stage
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int updateByPrimaryKeySelective(CkdStage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ckd_stage
	 * 
	 * @mbggenerated Tue Sep 08 13:30:46 CST 2015
	 */
	int updateByPrimaryKey(CkdStage record);

	/**
	 * 根据透析活动ID取得信息
	 * 
	 * @Title: selectByDCId
	 * @param pdId
	 *            患者诊断主表ID
	 * @return CkdStage
	 * 
	 */
	CkdStage selectByPDId(Long pdId);

	/**
	 * 根据患者ID查询历史记录
	 * 
	 * @Title: selectByPatientId
	 * @param patientId
	 *            患者ID
	 * @return List<CkdStagePO>
	 * 
	 */
	List<CkdStagePO> selectByPatientId(Long patientId);

	/**
	 * 根据患者Id查询最新的一次分期数据
	 * 
	 * @Title: selectLastestByPatientId
	 * @param patientId
	 * @return
	 *
	 */
	CkdStage selectLastestByPatientId(Long patientId);
}