package com.xtt.common.dao.mapper;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.PatientAssayRecord;
import com.xtt.common.dao.po.PatientAssayRecordPO;

@Repository
public interface PatientAssayRecordMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table patient_assay_record
	 * 
	 * @mbggenerated Wed Jan 27 20:16:53 CST 2016
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table patient_assay_record
	 * 
	 * @mbggenerated Wed Jan 27 20:16:53 CST 2016
	 */
	int insert(PatientAssayRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table patient_assay_record
	 * 
	 * @mbggenerated Wed Jan 27 20:16:53 CST 2016
	 */
	int insertSelective(PatientAssayRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table patient_assay_record
	 * 
	 * @mbggenerated Wed Jan 27 20:16:53 CST 2016
	 */
	PatientAssayRecord selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table patient_assay_record
	 * 
	 * @mbggenerated Wed Jan 27 20:16:53 CST 2016
	 */
	int updateByPrimaryKeySelective(PatientAssayRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table patient_assay_record
	 * 
	 * @mbggenerated Wed Jan 27 20:16:53 CST 2016
	 */
	int updateByPrimaryKey(PatientAssayRecord record);

	/* 自定义 */
	/**
	 * 根据自定义条件查询数据
	 * 
	 * @Title: selectByCondition
	 * @param patientAssayRecord
	 * @return
	 * 
	 */
	List<PatientAssayRecordPO> selectByCondition(PatientAssayRecord patientAssayRecord);

	/**
	 * 查询不同化验时间的化验记录
	 * 
	 * @Title: selectAssayRecord
	 * @param record
	 * @return
	 * 
	 */
	List<PatientAssayRecordPO> selectDateAssayRecord(PatientAssayRecordPO record);

	/**
	 * 根据条件查找报告数据
	 * 
	 * @Title: selectReportData
	 * @param patientId
	 * @param startTime
	 * @param endTime
	 * @param pId
	 * @return
	 * 
	 */
	List<Map<String, Object>> selectReportData(@Param("patientId") Long patientId, @Param("startTime") Date startTime, @Param("endTime") Date endTime,
					@Param("itemCode") String itemCode);

	/**
	 * 根据时间查询报表信息
	 * 
	 * @Title: selectByAssayTime
	 * @param patientAssayRecord
	 * @return
	 * 
	 */
	List<PatientAssayRecordPO> selectReportByAssayTime(PatientAssayRecordPO patientAssayRecord);

	/**
	 * 根据月份查询月份的化验明细
	 * 
	 * @Title: selectByMonth
	 * @param patientAssayRecord
	 * @return
	 * 
	 */
	List<PatientAssayRecordPO> selectByMonth(PatientAssayRecordPO patientAssayRecord);

	/**
	 * 查询相关统计。求总数量，总和，均值，标准差
	 * 
	 * @Title: selectStatisticsReport
	 * @param patientAssayRecord
	 * @return
	 * 
	 */
	List<PatientAssayRecordPO> selectStatisticsReport(PatientAssayRecordPO patientAssayRecord);

	/**
	 * 差询患者所有的类别列表
	 * 
	 * @Title: selectCategoryListByPatientId
	 * @param patientId
	 * @param tenantId
	 * @return
	 * 
	 */
	@Deprecated
	List<Map<String, Object>> selectCategoryListByPatientId(@Param("patientId") Long patientId, @Param("tenantId") Integer tenantId);

	/**
	 * 查询患者某天的类别列表
	 * 
	 * @Title: selectCategoryList
	 * @param record
	 * @return
	 * 
	 */
	List<PatientAssayRecordPO> selectCategoryList(PatientAssayRecordPO record);

	/**
	 * 获取患者最新一次的化验数据
	 * 
	 * @Title: selectLatestAssayDateByTenantId
	 * @param tenantId
	 * @return
	 * 
	 */
	List<Map<String, Object>> selectLatestAssayDateByTenantId(Integer tenantId);

	/**
	 * 根据自定义code查询数据
	 * 
	 * @Title: selectByFkDictCode
	 * @param record
	 * @return
	 *
	 */
	List<PatientAssayRecordPO> selectByFkDictCode(PatientAssayRecord record);
}