package com.xtt.common.dao.mapper;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.xtt.common.dao.model.PatientAssayRecord;
import com.xtt.common.dao.po.PatientAssayRecordPO;

@Repository
public interface PatientAssayRecordMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_record
     * 
     * @mbggenerated Wed Jan 27 20:16:53 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_record
     * 
     * @mbggenerated Wed Jan 27 20:16:53 CST 2016
     */
    int insert(PatientAssayRecord record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_record
     * 
     * @mbggenerated Wed Jan 27 20:16:53 CST 2016
     */
    int insertSelective(PatientAssayRecord record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_record
     * 
     * @mbggenerated Wed Jan 27 20:16:53 CST 2016
     */
    PatientAssayRecord selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_record
     * 
     * @mbggenerated Wed Jan 27 20:16:53 CST 2016
     */
    int updateByPrimaryKeySelective(PatientAssayRecord record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table patient_assay_record
     * 
     * @mbggenerated Wed Jan 27 20:16:53 CST 2016
     */
    int updateByPrimaryKey(PatientAssayRecord record);

    /* 自定义 */
    /**
     * 根据指定条件获取病患检验结果数据
     * 
     * @Title: listPatientAssayRecord
     * @param po
     * @return
     *
     */
    List<PatientAssayRecordPO> listPatientAssayRecord(PatientAssayRecordPO po);

    /**
     * 根据创建时间查询出当天的数据
     * 
     * @Title: listByCreateTime
     * @param createTime
     * @param endCreateTime
     * @param fkPatientId
     * @param integer
     * @return
     *
     */
    List<PatientAssayRecordPO> listByCreateTime(@Param("startCreateTime") Date startCreateTime, @Param("endCreateTime") Date endCreateTime,
                    @Param("fkTenantId") Integer fkTenantId, @Param("fkPatientId") Long fkPatientId);


    /**
     * 根据患者id，报告时间查询患者化验数据
     *
     * @param po
     * @return
     */
    List<PatientAssayRecordPO> listAssayRecordByCondition(PatientAssayRecordPO po);

    /**
     * 根据化验时间，租户id。查询对应患者id
     *
     * @param assayDate
     * @param tenantId
     * @return
     */
    List<Long> listPatientIds(@Param("assayDate") String assayDate, @Param("tenantId") Integer tenantId);

    /**
     * 根据当前参数 创建日期 ，患者ID获取患者原始化验结果数据
     * @Title: selectPatientAssayRecordByCreateDate
     * @param currentDate 创建日期
     * @param tenantId
     * @param patientId 患者ID
     * @return
     *
     */
    List<PatientAssayRecord> selectPatientAssayRecordByCreateDate(@Param("currentDate") Date currentDate, @Param("tenantId") String tenantId,@Param("fkPatientId")Long patientId);

}